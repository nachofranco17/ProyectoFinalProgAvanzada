Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACTUALIZA
    AGREGA_LA_COLUMNA
    AGRUPANDO_POR
    BORRA_DE_LA
    CAMBIA_LA_TABLA
    CAST
    CLAVE_PRIMA
    CLAVE_REFERENTE
    COMO_MUCHO
    CONTANDO
    CREATE_TABLE
    CREA_LA_TABLA
    DEFAULT
    DE_LA_TABLA
    DONDE
    DROP_TABLE
    ELIMINA_LA_COLUMNA
    EN
    ENTRE
    EN_ESTO
    ES_NULO
    EXISTE
    EXISTS
    FLOAT
    IN
    IS_NULL
    LIKE
    LIMIT
    LOS_DISTINTOS
    LOS_VALORES
    METE_EN
    MEZCLANDO
    NO_NULO
    ORDENA_POR
    PARECIDO_A
    POR_DEFECTO
    SETEA
    TIRA_LA_TABLA
    TODO
    TRAEME
    TRANSFORMA_A
    UNICO
    WHERE_DEL_GROUP_BY
    Y

Grammar

Rule 0     S' -> statement
Rule 1     statement -> select_statement
Rule 2     statement -> insert_statement
Rule 3     statement -> update_statement
Rule 4     statement -> delete_statement
Rule 5     statement -> alter_table_statement
Rule 6     select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
Rule 7     opt_order_by_clause -> ORDER_BY column_list
Rule 8     opt_order_by_clause -> empty
Rule 9     opt_distinct -> DISTINCT
Rule 10    opt_distinct -> empty
Rule 11    select_list -> ASTERISCO
Rule 12    select_list -> select_items
Rule 13    select_items -> select_items COMA select_item
Rule 14    select_items -> select_item
Rule 15    select_item -> DISTINCT identifier
Rule 16    select_item -> identifier
Rule 17    select_item -> function_call
Rule 18    function_call -> COUNT PARENIZQ operand PARENDER
Rule 19    function_call -> SUM PARENIZQ operand PARENDER
Rule 20    function_call -> AVG PARENIZQ operand PARENDER
Rule 21    function_call -> MIN PARENIZQ operand PARENDER
Rule 22    function_call -> MAX PARENIZQ operand PARENDER
Rule 23    column_list -> identifier
Rule 24    column_list -> identifier COMA column_list
Rule 25    table_list -> identifier
Rule 26    table_list -> identifier COMA table_list
Rule 27    opt_join_clause -> JOIN identifier ON condition
Rule 28    opt_join_clause -> empty
Rule 29    opt_where_clause -> WHERE condition
Rule 30    opt_where_clause -> empty
Rule 31    opt_group_by_clause -> GROUP_BY column_list
Rule 32    opt_group_by_clause -> empty
Rule 33    opt_having_clause -> HAVING condition
Rule 34    opt_having_clause -> empty
Rule 35    condition -> expression
Rule 36    condition -> condition AND condition
Rule 37    condition -> condition OR condition
Rule 38    operand -> value
Rule 39    operand -> aggregate_function
Rule 40    value -> NUM
Rule 41    value -> STRING
Rule 42    value -> identifier
Rule 43    value -> ASTERISCO
Rule 44    expression -> operand comparador operand
Rule 45    expression -> operand BETWEEN operand AND operand
Rule 46    aggregate_function -> COUNT PARENIZQ operand PARENDER
Rule 47    aggregate_function -> SUM PARENIZQ operand PARENDER
Rule 48    aggregate_function -> AVG PARENIZQ operand PARENDER
Rule 49    aggregate_function -> MIN PARENIZQ operand PARENDER
Rule 50    aggregate_function -> MAX PARENIZQ operand PARENDER
Rule 51    comparador -> IGUAL
Rule 52    comparador -> MAYOR_QUE
Rule 53    comparador -> MENOR_QUE
Rule 54    comparador -> MAYOR_IGUAL
Rule 55    comparador -> MENOR_IGUAL
Rule 56    comparador -> DIFERENTE
Rule 57    insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
Rule 58    value_list -> value
Rule 59    value_list -> value COMA value_list
Rule 60    update_statement -> UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA
Rule 61    assignment_list -> assignment
Rule 62    assignment_list -> assignment COMA assignment_list
Rule 63    assignment -> identifier IGUAL value
Rule 64    delete_statement -> DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA
Rule 65    alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA
Rule 66    alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA
Rule 67    column_definition -> identifier data_type column_constraints
Rule 68    data_type -> VARCHAR PARENIZQ NUM PARENDER
Rule 69    data_type -> INT
Rule 70    column_constraints -> constraint
Rule 71    column_constraints -> column_constraints constraint
Rule 72    constraint -> NOT_NULL
Rule 73    constraint -> UNIQUE
Rule 74    constraint -> PRIMARY_KEY
Rule 75    constraint -> FOREIGN_KEY
Rule 76    identifier -> ID
Rule 77    identifier -> ID PUNTO ID
Rule 78    empty -> <empty>

Terminals, with rules where they appear

ACTUALIZA            : 
ADD_COLUMN           : 65
AGREGA_LA_COLUMNA    : 
AGRUPANDO_POR        : 
ALTER_TABLE          : 65 66
AND                  : 36 45
ASTERISCO            : 11 43
AVG                  : 20 48
BETWEEN              : 45
BORRA_DE_LA          : 
CAMBIA_LA_TABLA      : 
CAST                 : 
CLAVE_PRIMA          : 
CLAVE_REFERENTE      : 
COMA                 : 13 24 26 59 62
COMO_MUCHO           : 
CONTANDO             : 
COUNT                : 18 46
CREATE_TABLE         : 
CREA_LA_TABLA        : 
DEFAULT              : 
DELETE_FROM          : 64
DE_LA_TABLA          : 
DIFERENTE            : 56
DISTINCT             : 9 15
DONDE                : 
DROP_COLUMN          : 66
DROP_TABLE           : 
ELIMINA_LA_COLUMNA   : 
EN                   : 
ENTRE                : 
EN_ESTO              : 
ES_NULO              : 
EXISTE               : 
EXISTS               : 
FLOAT                : 
FOREIGN_KEY          : 75
FROM                 : 6
GROUP_BY             : 31
HAVING               : 33
ID                   : 76 77 77
IGUAL                : 51 63
IN                   : 
INSERT_INTO          : 57
INT                  : 69
IS_NULL              : 
JOIN                 : 27
LIKE                 : 
LIMIT                : 
LOS_DISTINTOS        : 
LOS_VALORES          : 
MAX                  : 22 50
MAYOR_IGUAL          : 54
MAYOR_QUE            : 52
MENOR_IGUAL          : 55
MENOR_QUE            : 53
METE_EN              : 
MEZCLANDO            : 
MIN                  : 21 49
NOT_NULL             : 72
NO_NULO              : 
NUM                  : 40 68
ON                   : 27
OR                   : 37
ORDENA_POR           : 
ORDER_BY             : 7
PARECIDO_A           : 
PARENDER             : 18 19 20 21 22 46 47 48 49 50 57 57 68
PARENIZQ             : 18 19 20 21 22 46 47 48 49 50 57 57 68
POR_DEFECTO          : 
PRIMARY_KEY          : 74
PUNTO                : 77
PUNTO_Y_COMA         : 6 57 60 64 65 66
SELECT               : 6
SET                  : 60
SETEA                : 
STRING               : 41
SUM                  : 19 47
TIRA_LA_TABLA        : 
TODO                 : 
TRAEME               : 
TRANSFORMA_A         : 
UNICO                : 
UNIQUE               : 73
UPDATE               : 60
VALUES               : 57
VARCHAR              : 68
WHERE                : 29
WHERE_DEL_GROUP_BY   : 
Y                    : 
error                : 

Nonterminals, with rules where they appear

aggregate_function   : 39
alter_table_statement : 5
assignment           : 61 62
assignment_list      : 60 62
column_constraints   : 67 71
column_definition    : 65
column_list          : 7 24 31 57
comparador           : 44
condition            : 27 29 33 36 36 37 37
constraint           : 70 71
data_type            : 67
delete_statement     : 4
empty                : 8 10 28 30 32 34
expression           : 35
function_call        : 17
identifier           : 15 16 23 24 25 26 27 42 57 60 63 64 65 66 66 67
insert_statement     : 2
operand              : 18 19 20 21 22 44 44 45 45 45 46 47 48 49 50
opt_distinct         : 6
opt_group_by_clause  : 6
opt_having_clause    : 6
opt_join_clause      : 6
opt_order_by_clause  : 6
opt_where_clause     : 6 60 64
select_item          : 13 14
select_items         : 12 13
select_list          : 6
select_statement     : 1
statement            : 0
table_list           : 6 26
update_statement     : 3
value                : 38 58 59 63
value_list           : 57 59

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . select_statement
    (2) statement -> . insert_statement
    (3) statement -> . update_statement
    (4) statement -> . delete_statement
    (5) statement -> . alter_table_statement
    (6) select_statement -> . SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (57) insert_statement -> . INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
    (60) update_statement -> . UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA
    (64) delete_statement -> . DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA
    (65) alter_table_statement -> . ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA
    (66) alter_table_statement -> . ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA

    SELECT          shift and go to state 7
    INSERT_INTO     shift and go to state 8
    UPDATE          shift and go to state 9
    DELETE_FROM     shift and go to state 10
    ALTER_TABLE     shift and go to state 11

    statement                      shift and go to state 1
    select_statement               shift and go to state 2
    insert_statement               shift and go to state 3
    update_statement               shift and go to state 4
    delete_statement               shift and go to state 5
    alter_table_statement          shift and go to state 6

state 1

    (0) S' -> statement .



state 2

    (1) statement -> select_statement .

    $end            reduce using rule 1 (statement -> select_statement .)


state 3

    (2) statement -> insert_statement .

    $end            reduce using rule 2 (statement -> insert_statement .)


state 4

    (3) statement -> update_statement .

    $end            reduce using rule 3 (statement -> update_statement .)


state 5

    (4) statement -> delete_statement .

    $end            reduce using rule 4 (statement -> delete_statement .)


state 6

    (5) statement -> alter_table_statement .

    $end            reduce using rule 5 (statement -> alter_table_statement .)


state 7

    (6) select_statement -> SELECT . opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (9) opt_distinct -> . DISTINCT
    (10) opt_distinct -> . empty
    (78) empty -> .

  ! shift/reduce conflict for DISTINCT resolved as shift
    DISTINCT        shift and go to state 13
    ASTERISCO       reduce using rule 78 (empty -> .)
    ID              reduce using rule 78 (empty -> .)
    COUNT           reduce using rule 78 (empty -> .)
    SUM             reduce using rule 78 (empty -> .)
    AVG             reduce using rule 78 (empty -> .)
    MIN             reduce using rule 78 (empty -> .)
    MAX             reduce using rule 78 (empty -> .)

  ! DISTINCT        [ reduce using rule 78 (empty -> .) ]

    opt_distinct                   shift and go to state 12
    empty                          shift and go to state 14

state 8

    (57) insert_statement -> INSERT_INTO . identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 15

state 9

    (60) update_statement -> UPDATE . identifier SET assignment_list opt_where_clause PUNTO_Y_COMA
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 17

state 10

    (64) delete_statement -> DELETE_FROM . identifier opt_where_clause PUNTO_Y_COMA
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 18

state 11

    (65) alter_table_statement -> ALTER_TABLE . identifier ADD_COLUMN column_definition PUNTO_Y_COMA
    (66) alter_table_statement -> ALTER_TABLE . identifier DROP_COLUMN identifier PUNTO_Y_COMA
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 19

state 12

    (6) select_statement -> SELECT opt_distinct . select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (11) select_list -> . ASTERISCO
    (12) select_list -> . select_items
    (13) select_items -> . select_items COMA select_item
    (14) select_items -> . select_item
    (15) select_item -> . DISTINCT identifier
    (16) select_item -> . identifier
    (17) select_item -> . function_call
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID
    (18) function_call -> . COUNT PARENIZQ operand PARENDER
    (19) function_call -> . SUM PARENIZQ operand PARENDER
    (20) function_call -> . AVG PARENIZQ operand PARENDER
    (21) function_call -> . MIN PARENIZQ operand PARENDER
    (22) function_call -> . MAX PARENIZQ operand PARENDER

    ASTERISCO       shift and go to state 21
    DISTINCT        shift and go to state 24
    ID              shift and go to state 16
    COUNT           shift and go to state 27
    SUM             shift and go to state 28
    AVG             shift and go to state 29
    MIN             shift and go to state 30
    MAX             shift and go to state 31

    select_list                    shift and go to state 20
    select_items                   shift and go to state 22
    select_item                    shift and go to state 23
    identifier                     shift and go to state 25
    function_call                  shift and go to state 26

state 13

    (9) opt_distinct -> DISTINCT .

    ASTERISCO       reduce using rule 9 (opt_distinct -> DISTINCT .)
    DISTINCT        reduce using rule 9 (opt_distinct -> DISTINCT .)
    ID              reduce using rule 9 (opt_distinct -> DISTINCT .)
    COUNT           reduce using rule 9 (opt_distinct -> DISTINCT .)
    SUM             reduce using rule 9 (opt_distinct -> DISTINCT .)
    AVG             reduce using rule 9 (opt_distinct -> DISTINCT .)
    MIN             reduce using rule 9 (opt_distinct -> DISTINCT .)
    MAX             reduce using rule 9 (opt_distinct -> DISTINCT .)


state 14

    (10) opt_distinct -> empty .

    ASTERISCO       reduce using rule 10 (opt_distinct -> empty .)
    DISTINCT        reduce using rule 10 (opt_distinct -> empty .)
    ID              reduce using rule 10 (opt_distinct -> empty .)
    COUNT           reduce using rule 10 (opt_distinct -> empty .)
    SUM             reduce using rule 10 (opt_distinct -> empty .)
    AVG             reduce using rule 10 (opt_distinct -> empty .)
    MIN             reduce using rule 10 (opt_distinct -> empty .)
    MAX             reduce using rule 10 (opt_distinct -> empty .)


state 15

    (57) insert_statement -> INSERT_INTO identifier . PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA

    PARENIZQ        shift and go to state 32


state 16

    (76) identifier -> ID .
    (77) identifier -> ID . PUNTO ID

    PARENIZQ        reduce using rule 76 (identifier -> ID .)
    SET             reduce using rule 76 (identifier -> ID .)
    WHERE           reduce using rule 76 (identifier -> ID .)
    PUNTO_Y_COMA    reduce using rule 76 (identifier -> ID .)
    ADD_COLUMN      reduce using rule 76 (identifier -> ID .)
    DROP_COLUMN     reduce using rule 76 (identifier -> ID .)
    COMA            reduce using rule 76 (identifier -> ID .)
    FROM            reduce using rule 76 (identifier -> ID .)
    PARENDER        reduce using rule 76 (identifier -> ID .)
    IGUAL           reduce using rule 76 (identifier -> ID .)
    BETWEEN         reduce using rule 76 (identifier -> ID .)
    MAYOR_QUE       reduce using rule 76 (identifier -> ID .)
    MENOR_QUE       reduce using rule 76 (identifier -> ID .)
    MAYOR_IGUAL     reduce using rule 76 (identifier -> ID .)
    MENOR_IGUAL     reduce using rule 76 (identifier -> ID .)
    DIFERENTE       reduce using rule 76 (identifier -> ID .)
    VARCHAR         reduce using rule 76 (identifier -> ID .)
    INT             reduce using rule 76 (identifier -> ID .)
    JOIN            reduce using rule 76 (identifier -> ID .)
    GROUP_BY        reduce using rule 76 (identifier -> ID .)
    HAVING          reduce using rule 76 (identifier -> ID .)
    ORDER_BY        reduce using rule 76 (identifier -> ID .)
    AND             reduce using rule 76 (identifier -> ID .)
    OR              reduce using rule 76 (identifier -> ID .)
    ON              reduce using rule 76 (identifier -> ID .)
    PUNTO           shift and go to state 33


state 17

    (60) update_statement -> UPDATE identifier . SET assignment_list opt_where_clause PUNTO_Y_COMA

    SET             shift and go to state 34


state 18

    (64) delete_statement -> DELETE_FROM identifier . opt_where_clause PUNTO_Y_COMA
    (29) opt_where_clause -> . WHERE condition
    (30) opt_where_clause -> . empty
    (78) empty -> .

    WHERE           shift and go to state 36
    PUNTO_Y_COMA    reduce using rule 78 (empty -> .)

    opt_where_clause               shift and go to state 35
    empty                          shift and go to state 37

state 19

    (65) alter_table_statement -> ALTER_TABLE identifier . ADD_COLUMN column_definition PUNTO_Y_COMA
    (66) alter_table_statement -> ALTER_TABLE identifier . DROP_COLUMN identifier PUNTO_Y_COMA

    ADD_COLUMN      shift and go to state 38
    DROP_COLUMN     shift and go to state 39


state 20

    (6) select_statement -> SELECT opt_distinct select_list . FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA

    FROM            shift and go to state 40


state 21

    (11) select_list -> ASTERISCO .

    FROM            reduce using rule 11 (select_list -> ASTERISCO .)


state 22

    (12) select_list -> select_items .
    (13) select_items -> select_items . COMA select_item

    FROM            reduce using rule 12 (select_list -> select_items .)
    COMA            shift and go to state 41


state 23

    (14) select_items -> select_item .

    COMA            reduce using rule 14 (select_items -> select_item .)
    FROM            reduce using rule 14 (select_items -> select_item .)


state 24

    (15) select_item -> DISTINCT . identifier
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 42

state 25

    (16) select_item -> identifier .

    COMA            reduce using rule 16 (select_item -> identifier .)
    FROM            reduce using rule 16 (select_item -> identifier .)


state 26

    (17) select_item -> function_call .

    COMA            reduce using rule 17 (select_item -> function_call .)
    FROM            reduce using rule 17 (select_item -> function_call .)


state 27

    (18) function_call -> COUNT . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 43


state 28

    (19) function_call -> SUM . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 44


state 29

    (20) function_call -> AVG . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 45


state 30

    (21) function_call -> MIN . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 46


state 31

    (22) function_call -> MAX . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 47


state 32

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ . column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
    (23) column_list -> . identifier
    (24) column_list -> . identifier COMA column_list
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 48
    column_list                    shift and go to state 49

state 33

    (77) identifier -> ID PUNTO . ID

    ID              shift and go to state 50


state 34

    (60) update_statement -> UPDATE identifier SET . assignment_list opt_where_clause PUNTO_Y_COMA
    (61) assignment_list -> . assignment
    (62) assignment_list -> . assignment COMA assignment_list
    (63) assignment -> . identifier IGUAL value
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 51
    assignment_list                shift and go to state 52
    assignment                     shift and go to state 53

state 35

    (64) delete_statement -> DELETE_FROM identifier opt_where_clause . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 54


state 36

    (29) opt_where_clause -> WHERE . condition
    (35) condition -> . expression
    (36) condition -> . condition AND condition
    (37) condition -> . condition OR condition
    (44) expression -> . operand comparador operand
    (45) expression -> . operand BETWEEN operand AND operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    condition                      shift and go to state 55
    expression                     shift and go to state 56
    operand                        shift and go to state 57
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 37

    (30) opt_where_clause -> empty .

    PUNTO_Y_COMA    reduce using rule 30 (opt_where_clause -> empty .)
    GROUP_BY        reduce using rule 30 (opt_where_clause -> empty .)
    HAVING          reduce using rule 30 (opt_where_clause -> empty .)
    ORDER_BY        reduce using rule 30 (opt_where_clause -> empty .)


state 38

    (65) alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN . column_definition PUNTO_Y_COMA
    (67) column_definition -> . identifier data_type column_constraints
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 69
    column_definition              shift and go to state 70

state 39

    (66) alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN . identifier PUNTO_Y_COMA
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 71

state 40

    (6) select_statement -> SELECT opt_distinct select_list FROM . table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (25) table_list -> . identifier
    (26) table_list -> . identifier COMA table_list
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    table_list                     shift and go to state 72
    identifier                     shift and go to state 73

state 41

    (13) select_items -> select_items COMA . select_item
    (15) select_item -> . DISTINCT identifier
    (16) select_item -> . identifier
    (17) select_item -> . function_call
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID
    (18) function_call -> . COUNT PARENIZQ operand PARENDER
    (19) function_call -> . SUM PARENIZQ operand PARENDER
    (20) function_call -> . AVG PARENIZQ operand PARENDER
    (21) function_call -> . MIN PARENIZQ operand PARENDER
    (22) function_call -> . MAX PARENIZQ operand PARENDER

    DISTINCT        shift and go to state 24
    ID              shift and go to state 16
    COUNT           shift and go to state 27
    SUM             shift and go to state 28
    AVG             shift and go to state 29
    MIN             shift and go to state 30
    MAX             shift and go to state 31

    select_item                    shift and go to state 74
    identifier                     shift and go to state 25
    function_call                  shift and go to state 26

state 42

    (15) select_item -> DISTINCT identifier .

    COMA            reduce using rule 15 (select_item -> DISTINCT identifier .)
    FROM            reduce using rule 15 (select_item -> DISTINCT identifier .)


state 43

    (18) function_call -> COUNT PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 75
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 44

    (19) function_call -> SUM PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 76
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 45

    (20) function_call -> AVG PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 77
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 46

    (21) function_call -> MIN PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 78
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 47

    (22) function_call -> MAX PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 79
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 48

    (23) column_list -> identifier .
    (24) column_list -> identifier . COMA column_list

    PARENDER        reduce using rule 23 (column_list -> identifier .)
    HAVING          reduce using rule 23 (column_list -> identifier .)
    ORDER_BY        reduce using rule 23 (column_list -> identifier .)
    PUNTO_Y_COMA    reduce using rule 23 (column_list -> identifier .)
    COMA            shift and go to state 80


state 49

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ column_list . PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA

    PARENDER        shift and go to state 81


state 50

    (77) identifier -> ID PUNTO ID .

    PARENIZQ        reduce using rule 77 (identifier -> ID PUNTO ID .)
    SET             reduce using rule 77 (identifier -> ID PUNTO ID .)
    WHERE           reduce using rule 77 (identifier -> ID PUNTO ID .)
    PUNTO_Y_COMA    reduce using rule 77 (identifier -> ID PUNTO ID .)
    ADD_COLUMN      reduce using rule 77 (identifier -> ID PUNTO ID .)
    DROP_COLUMN     reduce using rule 77 (identifier -> ID PUNTO ID .)
    COMA            reduce using rule 77 (identifier -> ID PUNTO ID .)
    FROM            reduce using rule 77 (identifier -> ID PUNTO ID .)
    PARENDER        reduce using rule 77 (identifier -> ID PUNTO ID .)
    IGUAL           reduce using rule 77 (identifier -> ID PUNTO ID .)
    BETWEEN         reduce using rule 77 (identifier -> ID PUNTO ID .)
    MAYOR_QUE       reduce using rule 77 (identifier -> ID PUNTO ID .)
    MENOR_QUE       reduce using rule 77 (identifier -> ID PUNTO ID .)
    MAYOR_IGUAL     reduce using rule 77 (identifier -> ID PUNTO ID .)
    MENOR_IGUAL     reduce using rule 77 (identifier -> ID PUNTO ID .)
    DIFERENTE       reduce using rule 77 (identifier -> ID PUNTO ID .)
    VARCHAR         reduce using rule 77 (identifier -> ID PUNTO ID .)
    INT             reduce using rule 77 (identifier -> ID PUNTO ID .)
    JOIN            reduce using rule 77 (identifier -> ID PUNTO ID .)
    GROUP_BY        reduce using rule 77 (identifier -> ID PUNTO ID .)
    HAVING          reduce using rule 77 (identifier -> ID PUNTO ID .)
    ORDER_BY        reduce using rule 77 (identifier -> ID PUNTO ID .)
    AND             reduce using rule 77 (identifier -> ID PUNTO ID .)
    OR              reduce using rule 77 (identifier -> ID PUNTO ID .)
    ON              reduce using rule 77 (identifier -> ID PUNTO ID .)


state 51

    (63) assignment -> identifier . IGUAL value

    IGUAL           shift and go to state 82


state 52

    (60) update_statement -> UPDATE identifier SET assignment_list . opt_where_clause PUNTO_Y_COMA
    (29) opt_where_clause -> . WHERE condition
    (30) opt_where_clause -> . empty
    (78) empty -> .

    WHERE           shift and go to state 36
    PUNTO_Y_COMA    reduce using rule 78 (empty -> .)

    opt_where_clause               shift and go to state 83
    empty                          shift and go to state 37

state 53

    (61) assignment_list -> assignment .
    (62) assignment_list -> assignment . COMA assignment_list

    WHERE           reduce using rule 61 (assignment_list -> assignment .)
    PUNTO_Y_COMA    reduce using rule 61 (assignment_list -> assignment .)
    COMA            shift and go to state 84


state 54

    (64) delete_statement -> DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA .

    $end            reduce using rule 64 (delete_statement -> DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA .)


state 55

    (29) opt_where_clause -> WHERE condition .
    (36) condition -> condition . AND condition
    (37) condition -> condition . OR condition

    PUNTO_Y_COMA    reduce using rule 29 (opt_where_clause -> WHERE condition .)
    GROUP_BY        reduce using rule 29 (opt_where_clause -> WHERE condition .)
    HAVING          reduce using rule 29 (opt_where_clause -> WHERE condition .)
    ORDER_BY        reduce using rule 29 (opt_where_clause -> WHERE condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86


state 56

    (35) condition -> expression .

    AND             reduce using rule 35 (condition -> expression .)
    OR              reduce using rule 35 (condition -> expression .)
    PUNTO_Y_COMA    reduce using rule 35 (condition -> expression .)
    GROUP_BY        reduce using rule 35 (condition -> expression .)
    HAVING          reduce using rule 35 (condition -> expression .)
    ORDER_BY        reduce using rule 35 (condition -> expression .)
    WHERE           reduce using rule 35 (condition -> expression .)


state 57

    (44) expression -> operand . comparador operand
    (45) expression -> operand . BETWEEN operand AND operand
    (51) comparador -> . IGUAL
    (52) comparador -> . MAYOR_QUE
    (53) comparador -> . MENOR_QUE
    (54) comparador -> . MAYOR_IGUAL
    (55) comparador -> . MENOR_IGUAL
    (56) comparador -> . DIFERENTE

    BETWEEN         shift and go to state 88
    IGUAL           shift and go to state 89
    MAYOR_QUE       shift and go to state 90
    MENOR_QUE       shift and go to state 91
    MAYOR_IGUAL     shift and go to state 92
    MENOR_IGUAL     shift and go to state 93
    DIFERENTE       shift and go to state 94

    comparador                     shift and go to state 87

state 58

    (38) operand -> value .

    BETWEEN         reduce using rule 38 (operand -> value .)
    IGUAL           reduce using rule 38 (operand -> value .)
    MAYOR_QUE       reduce using rule 38 (operand -> value .)
    MENOR_QUE       reduce using rule 38 (operand -> value .)
    MAYOR_IGUAL     reduce using rule 38 (operand -> value .)
    MENOR_IGUAL     reduce using rule 38 (operand -> value .)
    DIFERENTE       reduce using rule 38 (operand -> value .)
    PARENDER        reduce using rule 38 (operand -> value .)
    AND             reduce using rule 38 (operand -> value .)
    OR              reduce using rule 38 (operand -> value .)
    PUNTO_Y_COMA    reduce using rule 38 (operand -> value .)
    GROUP_BY        reduce using rule 38 (operand -> value .)
    HAVING          reduce using rule 38 (operand -> value .)
    ORDER_BY        reduce using rule 38 (operand -> value .)
    WHERE           reduce using rule 38 (operand -> value .)


state 59

    (39) operand -> aggregate_function .

    BETWEEN         reduce using rule 39 (operand -> aggregate_function .)
    IGUAL           reduce using rule 39 (operand -> aggregate_function .)
    MAYOR_QUE       reduce using rule 39 (operand -> aggregate_function .)
    MENOR_QUE       reduce using rule 39 (operand -> aggregate_function .)
    MAYOR_IGUAL     reduce using rule 39 (operand -> aggregate_function .)
    MENOR_IGUAL     reduce using rule 39 (operand -> aggregate_function .)
    DIFERENTE       reduce using rule 39 (operand -> aggregate_function .)
    PARENDER        reduce using rule 39 (operand -> aggregate_function .)
    AND             reduce using rule 39 (operand -> aggregate_function .)
    OR              reduce using rule 39 (operand -> aggregate_function .)
    PUNTO_Y_COMA    reduce using rule 39 (operand -> aggregate_function .)
    GROUP_BY        reduce using rule 39 (operand -> aggregate_function .)
    HAVING          reduce using rule 39 (operand -> aggregate_function .)
    ORDER_BY        reduce using rule 39 (operand -> aggregate_function .)
    WHERE           reduce using rule 39 (operand -> aggregate_function .)


state 60

    (40) value -> NUM .

    BETWEEN         reduce using rule 40 (value -> NUM .)
    IGUAL           reduce using rule 40 (value -> NUM .)
    MAYOR_QUE       reduce using rule 40 (value -> NUM .)
    MENOR_QUE       reduce using rule 40 (value -> NUM .)
    MAYOR_IGUAL     reduce using rule 40 (value -> NUM .)
    MENOR_IGUAL     reduce using rule 40 (value -> NUM .)
    DIFERENTE       reduce using rule 40 (value -> NUM .)
    PARENDER        reduce using rule 40 (value -> NUM .)
    COMA            reduce using rule 40 (value -> NUM .)
    WHERE           reduce using rule 40 (value -> NUM .)
    PUNTO_Y_COMA    reduce using rule 40 (value -> NUM .)
    AND             reduce using rule 40 (value -> NUM .)
    OR              reduce using rule 40 (value -> NUM .)
    GROUP_BY        reduce using rule 40 (value -> NUM .)
    HAVING          reduce using rule 40 (value -> NUM .)
    ORDER_BY        reduce using rule 40 (value -> NUM .)


state 61

    (41) value -> STRING .

    BETWEEN         reduce using rule 41 (value -> STRING .)
    IGUAL           reduce using rule 41 (value -> STRING .)
    MAYOR_QUE       reduce using rule 41 (value -> STRING .)
    MENOR_QUE       reduce using rule 41 (value -> STRING .)
    MAYOR_IGUAL     reduce using rule 41 (value -> STRING .)
    MENOR_IGUAL     reduce using rule 41 (value -> STRING .)
    DIFERENTE       reduce using rule 41 (value -> STRING .)
    PARENDER        reduce using rule 41 (value -> STRING .)
    COMA            reduce using rule 41 (value -> STRING .)
    WHERE           reduce using rule 41 (value -> STRING .)
    PUNTO_Y_COMA    reduce using rule 41 (value -> STRING .)
    AND             reduce using rule 41 (value -> STRING .)
    OR              reduce using rule 41 (value -> STRING .)
    GROUP_BY        reduce using rule 41 (value -> STRING .)
    HAVING          reduce using rule 41 (value -> STRING .)
    ORDER_BY        reduce using rule 41 (value -> STRING .)


state 62

    (42) value -> identifier .

    BETWEEN         reduce using rule 42 (value -> identifier .)
    IGUAL           reduce using rule 42 (value -> identifier .)
    MAYOR_QUE       reduce using rule 42 (value -> identifier .)
    MENOR_QUE       reduce using rule 42 (value -> identifier .)
    MAYOR_IGUAL     reduce using rule 42 (value -> identifier .)
    MENOR_IGUAL     reduce using rule 42 (value -> identifier .)
    DIFERENTE       reduce using rule 42 (value -> identifier .)
    PARENDER        reduce using rule 42 (value -> identifier .)
    COMA            reduce using rule 42 (value -> identifier .)
    WHERE           reduce using rule 42 (value -> identifier .)
    PUNTO_Y_COMA    reduce using rule 42 (value -> identifier .)
    AND             reduce using rule 42 (value -> identifier .)
    OR              reduce using rule 42 (value -> identifier .)
    GROUP_BY        reduce using rule 42 (value -> identifier .)
    HAVING          reduce using rule 42 (value -> identifier .)
    ORDER_BY        reduce using rule 42 (value -> identifier .)


state 63

    (43) value -> ASTERISCO .

    BETWEEN         reduce using rule 43 (value -> ASTERISCO .)
    IGUAL           reduce using rule 43 (value -> ASTERISCO .)
    MAYOR_QUE       reduce using rule 43 (value -> ASTERISCO .)
    MENOR_QUE       reduce using rule 43 (value -> ASTERISCO .)
    MAYOR_IGUAL     reduce using rule 43 (value -> ASTERISCO .)
    MENOR_IGUAL     reduce using rule 43 (value -> ASTERISCO .)
    DIFERENTE       reduce using rule 43 (value -> ASTERISCO .)
    PARENDER        reduce using rule 43 (value -> ASTERISCO .)
    COMA            reduce using rule 43 (value -> ASTERISCO .)
    WHERE           reduce using rule 43 (value -> ASTERISCO .)
    PUNTO_Y_COMA    reduce using rule 43 (value -> ASTERISCO .)
    AND             reduce using rule 43 (value -> ASTERISCO .)
    OR              reduce using rule 43 (value -> ASTERISCO .)
    GROUP_BY        reduce using rule 43 (value -> ASTERISCO .)
    HAVING          reduce using rule 43 (value -> ASTERISCO .)
    ORDER_BY        reduce using rule 43 (value -> ASTERISCO .)


state 64

    (46) aggregate_function -> COUNT . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 95


state 65

    (47) aggregate_function -> SUM . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 96


state 66

    (48) aggregate_function -> AVG . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 97


state 67

    (49) aggregate_function -> MIN . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 98


state 68

    (50) aggregate_function -> MAX . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 99


state 69

    (67) column_definition -> identifier . data_type column_constraints
    (68) data_type -> . VARCHAR PARENIZQ NUM PARENDER
    (69) data_type -> . INT

    VARCHAR         shift and go to state 101
    INT             shift and go to state 102

    data_type                      shift and go to state 100

state 70

    (65) alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 103


state 71

    (66) alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 104


state 72

    (6) select_statement -> SELECT opt_distinct select_list FROM table_list . opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (27) opt_join_clause -> . JOIN identifier ON condition
    (28) opt_join_clause -> . empty
    (78) empty -> .

    JOIN            shift and go to state 106
    WHERE           reduce using rule 78 (empty -> .)
    GROUP_BY        reduce using rule 78 (empty -> .)
    HAVING          reduce using rule 78 (empty -> .)
    ORDER_BY        reduce using rule 78 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 78 (empty -> .)

    opt_join_clause                shift and go to state 105
    empty                          shift and go to state 107

state 73

    (25) table_list -> identifier .
    (26) table_list -> identifier . COMA table_list

    JOIN            reduce using rule 25 (table_list -> identifier .)
    WHERE           reduce using rule 25 (table_list -> identifier .)
    GROUP_BY        reduce using rule 25 (table_list -> identifier .)
    HAVING          reduce using rule 25 (table_list -> identifier .)
    ORDER_BY        reduce using rule 25 (table_list -> identifier .)
    PUNTO_Y_COMA    reduce using rule 25 (table_list -> identifier .)
    COMA            shift and go to state 108


state 74

    (13) select_items -> select_items COMA select_item .

    COMA            reduce using rule 13 (select_items -> select_items COMA select_item .)
    FROM            reduce using rule 13 (select_items -> select_items COMA select_item .)


state 75

    (18) function_call -> COUNT PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 109


state 76

    (19) function_call -> SUM PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 110


state 77

    (20) function_call -> AVG PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 111


state 78

    (21) function_call -> MIN PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 112


state 79

    (22) function_call -> MAX PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 113


state 80

    (24) column_list -> identifier COMA . column_list
    (23) column_list -> . identifier
    (24) column_list -> . identifier COMA column_list
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 48
    column_list                    shift and go to state 114

state 81

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER . VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA

    VALUES          shift and go to state 115


state 82

    (63) assignment -> identifier IGUAL . value
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    ID              shift and go to state 16

    identifier                     shift and go to state 62
    value                          shift and go to state 116

state 83

    (60) update_statement -> UPDATE identifier SET assignment_list opt_where_clause . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 117


state 84

    (62) assignment_list -> assignment COMA . assignment_list
    (61) assignment_list -> . assignment
    (62) assignment_list -> . assignment COMA assignment_list
    (63) assignment -> . identifier IGUAL value
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    assignment                     shift and go to state 53
    assignment_list                shift and go to state 118
    identifier                     shift and go to state 51

state 85

    (36) condition -> condition AND . condition
    (35) condition -> . expression
    (36) condition -> . condition AND condition
    (37) condition -> . condition OR condition
    (44) expression -> . operand comparador operand
    (45) expression -> . operand BETWEEN operand AND operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    condition                      shift and go to state 119
    expression                     shift and go to state 56
    operand                        shift and go to state 57
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 86

    (37) condition -> condition OR . condition
    (35) condition -> . expression
    (36) condition -> . condition AND condition
    (37) condition -> . condition OR condition
    (44) expression -> . operand comparador operand
    (45) expression -> . operand BETWEEN operand AND operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    condition                      shift and go to state 120
    expression                     shift and go to state 56
    operand                        shift and go to state 57
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 87

    (44) expression -> operand comparador . operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 121
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 88

    (45) expression -> operand BETWEEN . operand AND operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 122
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 89

    (51) comparador -> IGUAL .

    NUM             reduce using rule 51 (comparador -> IGUAL .)
    STRING          reduce using rule 51 (comparador -> IGUAL .)
    ASTERISCO       reduce using rule 51 (comparador -> IGUAL .)
    COUNT           reduce using rule 51 (comparador -> IGUAL .)
    SUM             reduce using rule 51 (comparador -> IGUAL .)
    AVG             reduce using rule 51 (comparador -> IGUAL .)
    MIN             reduce using rule 51 (comparador -> IGUAL .)
    MAX             reduce using rule 51 (comparador -> IGUAL .)
    ID              reduce using rule 51 (comparador -> IGUAL .)


state 90

    (52) comparador -> MAYOR_QUE .

    NUM             reduce using rule 52 (comparador -> MAYOR_QUE .)
    STRING          reduce using rule 52 (comparador -> MAYOR_QUE .)
    ASTERISCO       reduce using rule 52 (comparador -> MAYOR_QUE .)
    COUNT           reduce using rule 52 (comparador -> MAYOR_QUE .)
    SUM             reduce using rule 52 (comparador -> MAYOR_QUE .)
    AVG             reduce using rule 52 (comparador -> MAYOR_QUE .)
    MIN             reduce using rule 52 (comparador -> MAYOR_QUE .)
    MAX             reduce using rule 52 (comparador -> MAYOR_QUE .)
    ID              reduce using rule 52 (comparador -> MAYOR_QUE .)


state 91

    (53) comparador -> MENOR_QUE .

    NUM             reduce using rule 53 (comparador -> MENOR_QUE .)
    STRING          reduce using rule 53 (comparador -> MENOR_QUE .)
    ASTERISCO       reduce using rule 53 (comparador -> MENOR_QUE .)
    COUNT           reduce using rule 53 (comparador -> MENOR_QUE .)
    SUM             reduce using rule 53 (comparador -> MENOR_QUE .)
    AVG             reduce using rule 53 (comparador -> MENOR_QUE .)
    MIN             reduce using rule 53 (comparador -> MENOR_QUE .)
    MAX             reduce using rule 53 (comparador -> MENOR_QUE .)
    ID              reduce using rule 53 (comparador -> MENOR_QUE .)


state 92

    (54) comparador -> MAYOR_IGUAL .

    NUM             reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    STRING          reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    ASTERISCO       reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    COUNT           reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    SUM             reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    AVG             reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    MIN             reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    MAX             reduce using rule 54 (comparador -> MAYOR_IGUAL .)
    ID              reduce using rule 54 (comparador -> MAYOR_IGUAL .)


state 93

    (55) comparador -> MENOR_IGUAL .

    NUM             reduce using rule 55 (comparador -> MENOR_IGUAL .)
    STRING          reduce using rule 55 (comparador -> MENOR_IGUAL .)
    ASTERISCO       reduce using rule 55 (comparador -> MENOR_IGUAL .)
    COUNT           reduce using rule 55 (comparador -> MENOR_IGUAL .)
    SUM             reduce using rule 55 (comparador -> MENOR_IGUAL .)
    AVG             reduce using rule 55 (comparador -> MENOR_IGUAL .)
    MIN             reduce using rule 55 (comparador -> MENOR_IGUAL .)
    MAX             reduce using rule 55 (comparador -> MENOR_IGUAL .)
    ID              reduce using rule 55 (comparador -> MENOR_IGUAL .)


state 94

    (56) comparador -> DIFERENTE .

    NUM             reduce using rule 56 (comparador -> DIFERENTE .)
    STRING          reduce using rule 56 (comparador -> DIFERENTE .)
    ASTERISCO       reduce using rule 56 (comparador -> DIFERENTE .)
    COUNT           reduce using rule 56 (comparador -> DIFERENTE .)
    SUM             reduce using rule 56 (comparador -> DIFERENTE .)
    AVG             reduce using rule 56 (comparador -> DIFERENTE .)
    MIN             reduce using rule 56 (comparador -> DIFERENTE .)
    MAX             reduce using rule 56 (comparador -> DIFERENTE .)
    ID              reduce using rule 56 (comparador -> DIFERENTE .)


state 95

    (46) aggregate_function -> COUNT PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 123
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 96

    (47) aggregate_function -> SUM PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 124
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 97

    (48) aggregate_function -> AVG PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 125
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 98

    (49) aggregate_function -> MIN PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 126
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 99

    (50) aggregate_function -> MAX PARENIZQ . operand PARENDER
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 127
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 100

    (67) column_definition -> identifier data_type . column_constraints
    (70) column_constraints -> . constraint
    (71) column_constraints -> . column_constraints constraint
    (72) constraint -> . NOT_NULL
    (73) constraint -> . UNIQUE
    (74) constraint -> . PRIMARY_KEY
    (75) constraint -> . FOREIGN_KEY

    NOT_NULL        shift and go to state 130
    UNIQUE          shift and go to state 131
    PRIMARY_KEY     shift and go to state 132
    FOREIGN_KEY     shift and go to state 133

    column_constraints             shift and go to state 128
    constraint                     shift and go to state 129

state 101

    (68) data_type -> VARCHAR . PARENIZQ NUM PARENDER

    PARENIZQ        shift and go to state 134


state 102

    (69) data_type -> INT .

    NOT_NULL        reduce using rule 69 (data_type -> INT .)
    UNIQUE          reduce using rule 69 (data_type -> INT .)
    PRIMARY_KEY     reduce using rule 69 (data_type -> INT .)
    FOREIGN_KEY     reduce using rule 69 (data_type -> INT .)


state 103

    (65) alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA .

    $end            reduce using rule 65 (alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA .)


state 104

    (66) alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA .

    $end            reduce using rule 66 (alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA .)


state 105

    (6) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause . opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (29) opt_where_clause -> . WHERE condition
    (30) opt_where_clause -> . empty
    (78) empty -> .

    WHERE           shift and go to state 36
    GROUP_BY        reduce using rule 78 (empty -> .)
    HAVING          reduce using rule 78 (empty -> .)
    ORDER_BY        reduce using rule 78 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 78 (empty -> .)

    opt_where_clause               shift and go to state 135
    empty                          shift and go to state 37

state 106

    (27) opt_join_clause -> JOIN . identifier ON condition
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 136

state 107

    (28) opt_join_clause -> empty .

    WHERE           reduce using rule 28 (opt_join_clause -> empty .)
    GROUP_BY        reduce using rule 28 (opt_join_clause -> empty .)
    HAVING          reduce using rule 28 (opt_join_clause -> empty .)
    ORDER_BY        reduce using rule 28 (opt_join_clause -> empty .)
    PUNTO_Y_COMA    reduce using rule 28 (opt_join_clause -> empty .)


state 108

    (26) table_list -> identifier COMA . table_list
    (25) table_list -> . identifier
    (26) table_list -> . identifier COMA table_list
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    identifier                     shift and go to state 73
    table_list                     shift and go to state 137

state 109

    (18) function_call -> COUNT PARENIZQ operand PARENDER .

    COMA            reduce using rule 18 (function_call -> COUNT PARENIZQ operand PARENDER .)
    FROM            reduce using rule 18 (function_call -> COUNT PARENIZQ operand PARENDER .)


state 110

    (19) function_call -> SUM PARENIZQ operand PARENDER .

    COMA            reduce using rule 19 (function_call -> SUM PARENIZQ operand PARENDER .)
    FROM            reduce using rule 19 (function_call -> SUM PARENIZQ operand PARENDER .)


state 111

    (20) function_call -> AVG PARENIZQ operand PARENDER .

    COMA            reduce using rule 20 (function_call -> AVG PARENIZQ operand PARENDER .)
    FROM            reduce using rule 20 (function_call -> AVG PARENIZQ operand PARENDER .)


state 112

    (21) function_call -> MIN PARENIZQ operand PARENDER .

    COMA            reduce using rule 21 (function_call -> MIN PARENIZQ operand PARENDER .)
    FROM            reduce using rule 21 (function_call -> MIN PARENIZQ operand PARENDER .)


state 113

    (22) function_call -> MAX PARENIZQ operand PARENDER .

    COMA            reduce using rule 22 (function_call -> MAX PARENIZQ operand PARENDER .)
    FROM            reduce using rule 22 (function_call -> MAX PARENIZQ operand PARENDER .)


state 114

    (24) column_list -> identifier COMA column_list .

    PARENDER        reduce using rule 24 (column_list -> identifier COMA column_list .)
    HAVING          reduce using rule 24 (column_list -> identifier COMA column_list .)
    ORDER_BY        reduce using rule 24 (column_list -> identifier COMA column_list .)
    PUNTO_Y_COMA    reduce using rule 24 (column_list -> identifier COMA column_list .)


state 115

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES . PARENIZQ value_list PARENDER PUNTO_Y_COMA

    PARENIZQ        shift and go to state 138


state 116

    (63) assignment -> identifier IGUAL value .

    COMA            reduce using rule 63 (assignment -> identifier IGUAL value .)
    WHERE           reduce using rule 63 (assignment -> identifier IGUAL value .)
    PUNTO_Y_COMA    reduce using rule 63 (assignment -> identifier IGUAL value .)


state 117

    (60) update_statement -> UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA .

    $end            reduce using rule 60 (update_statement -> UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA .)


state 118

    (62) assignment_list -> assignment COMA assignment_list .

    WHERE           reduce using rule 62 (assignment_list -> assignment COMA assignment_list .)
    PUNTO_Y_COMA    reduce using rule 62 (assignment_list -> assignment COMA assignment_list .)


state 119

    (36) condition -> condition AND condition .
    (36) condition -> condition . AND condition
    (37) condition -> condition . OR condition

    AND             reduce using rule 36 (condition -> condition AND condition .)
    OR              reduce using rule 36 (condition -> condition AND condition .)
    PUNTO_Y_COMA    reduce using rule 36 (condition -> condition AND condition .)
    GROUP_BY        reduce using rule 36 (condition -> condition AND condition .)
    HAVING          reduce using rule 36 (condition -> condition AND condition .)
    ORDER_BY        reduce using rule 36 (condition -> condition AND condition .)
    WHERE           reduce using rule 36 (condition -> condition AND condition .)

  ! AND             [ shift and go to state 85 ]
  ! OR              [ shift and go to state 86 ]


state 120

    (37) condition -> condition OR condition .
    (36) condition -> condition . AND condition
    (37) condition -> condition . OR condition

    AND             reduce using rule 37 (condition -> condition OR condition .)
    OR              reduce using rule 37 (condition -> condition OR condition .)
    PUNTO_Y_COMA    reduce using rule 37 (condition -> condition OR condition .)
    GROUP_BY        reduce using rule 37 (condition -> condition OR condition .)
    HAVING          reduce using rule 37 (condition -> condition OR condition .)
    ORDER_BY        reduce using rule 37 (condition -> condition OR condition .)
    WHERE           reduce using rule 37 (condition -> condition OR condition .)

  ! AND             [ shift and go to state 85 ]
  ! OR              [ shift and go to state 86 ]


state 121

    (44) expression -> operand comparador operand .

    AND             reduce using rule 44 (expression -> operand comparador operand .)
    OR              reduce using rule 44 (expression -> operand comparador operand .)
    PUNTO_Y_COMA    reduce using rule 44 (expression -> operand comparador operand .)
    GROUP_BY        reduce using rule 44 (expression -> operand comparador operand .)
    HAVING          reduce using rule 44 (expression -> operand comparador operand .)
    ORDER_BY        reduce using rule 44 (expression -> operand comparador operand .)
    WHERE           reduce using rule 44 (expression -> operand comparador operand .)


state 122

    (45) expression -> operand BETWEEN operand . AND operand

    AND             shift and go to state 139


state 123

    (46) aggregate_function -> COUNT PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 140


state 124

    (47) aggregate_function -> SUM PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 141


state 125

    (48) aggregate_function -> AVG PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 142


state 126

    (49) aggregate_function -> MIN PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 143


state 127

    (50) aggregate_function -> MAX PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 144


state 128

    (67) column_definition -> identifier data_type column_constraints .
    (71) column_constraints -> column_constraints . constraint
    (72) constraint -> . NOT_NULL
    (73) constraint -> . UNIQUE
    (74) constraint -> . PRIMARY_KEY
    (75) constraint -> . FOREIGN_KEY

    PUNTO_Y_COMA    reduce using rule 67 (column_definition -> identifier data_type column_constraints .)
    NOT_NULL        shift and go to state 130
    UNIQUE          shift and go to state 131
    PRIMARY_KEY     shift and go to state 132
    FOREIGN_KEY     shift and go to state 133

    constraint                     shift and go to state 145

state 129

    (70) column_constraints -> constraint .

    NOT_NULL        reduce using rule 70 (column_constraints -> constraint .)
    UNIQUE          reduce using rule 70 (column_constraints -> constraint .)
    PRIMARY_KEY     reduce using rule 70 (column_constraints -> constraint .)
    FOREIGN_KEY     reduce using rule 70 (column_constraints -> constraint .)
    PUNTO_Y_COMA    reduce using rule 70 (column_constraints -> constraint .)


state 130

    (72) constraint -> NOT_NULL .

    NOT_NULL        reduce using rule 72 (constraint -> NOT_NULL .)
    UNIQUE          reduce using rule 72 (constraint -> NOT_NULL .)
    PRIMARY_KEY     reduce using rule 72 (constraint -> NOT_NULL .)
    FOREIGN_KEY     reduce using rule 72 (constraint -> NOT_NULL .)
    PUNTO_Y_COMA    reduce using rule 72 (constraint -> NOT_NULL .)


state 131

    (73) constraint -> UNIQUE .

    NOT_NULL        reduce using rule 73 (constraint -> UNIQUE .)
    UNIQUE          reduce using rule 73 (constraint -> UNIQUE .)
    PRIMARY_KEY     reduce using rule 73 (constraint -> UNIQUE .)
    FOREIGN_KEY     reduce using rule 73 (constraint -> UNIQUE .)
    PUNTO_Y_COMA    reduce using rule 73 (constraint -> UNIQUE .)


state 132

    (74) constraint -> PRIMARY_KEY .

    NOT_NULL        reduce using rule 74 (constraint -> PRIMARY_KEY .)
    UNIQUE          reduce using rule 74 (constraint -> PRIMARY_KEY .)
    PRIMARY_KEY     reduce using rule 74 (constraint -> PRIMARY_KEY .)
    FOREIGN_KEY     reduce using rule 74 (constraint -> PRIMARY_KEY .)
    PUNTO_Y_COMA    reduce using rule 74 (constraint -> PRIMARY_KEY .)


state 133

    (75) constraint -> FOREIGN_KEY .

    NOT_NULL        reduce using rule 75 (constraint -> FOREIGN_KEY .)
    UNIQUE          reduce using rule 75 (constraint -> FOREIGN_KEY .)
    PRIMARY_KEY     reduce using rule 75 (constraint -> FOREIGN_KEY .)
    FOREIGN_KEY     reduce using rule 75 (constraint -> FOREIGN_KEY .)
    PUNTO_Y_COMA    reduce using rule 75 (constraint -> FOREIGN_KEY .)


state 134

    (68) data_type -> VARCHAR PARENIZQ . NUM PARENDER

    NUM             shift and go to state 146


state 135

    (6) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause . opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (31) opt_group_by_clause -> . GROUP_BY column_list
    (32) opt_group_by_clause -> . empty
    (78) empty -> .

    GROUP_BY        shift and go to state 148
    HAVING          reduce using rule 78 (empty -> .)
    ORDER_BY        reduce using rule 78 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 78 (empty -> .)

    opt_group_by_clause            shift and go to state 147
    empty                          shift and go to state 149

state 136

    (27) opt_join_clause -> JOIN identifier . ON condition

    ON              shift and go to state 150


state 137

    (26) table_list -> identifier COMA table_list .

    JOIN            reduce using rule 26 (table_list -> identifier COMA table_list .)
    WHERE           reduce using rule 26 (table_list -> identifier COMA table_list .)
    GROUP_BY        reduce using rule 26 (table_list -> identifier COMA table_list .)
    HAVING          reduce using rule 26 (table_list -> identifier COMA table_list .)
    ORDER_BY        reduce using rule 26 (table_list -> identifier COMA table_list .)
    PUNTO_Y_COMA    reduce using rule 26 (table_list -> identifier COMA table_list .)


state 138

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ . value_list PARENDER PUNTO_Y_COMA
    (58) value_list -> . value
    (59) value_list -> . value COMA value_list
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    ID              shift and go to state 16

    identifier                     shift and go to state 62
    value_list                     shift and go to state 151
    value                          shift and go to state 152

state 139

    (45) expression -> operand BETWEEN operand AND . operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    operand                        shift and go to state 153
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 140

    (46) aggregate_function -> COUNT PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    AND             reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    OR              reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 46 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)


state 141

    (47) aggregate_function -> SUM PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    AND             reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    OR              reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 47 (aggregate_function -> SUM PARENIZQ operand PARENDER .)


state 142

    (48) aggregate_function -> AVG PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    AND             reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    OR              reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 48 (aggregate_function -> AVG PARENIZQ operand PARENDER .)


state 143

    (49) aggregate_function -> MIN PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    AND             reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    OR              reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 49 (aggregate_function -> MIN PARENIZQ operand PARENDER .)


state 144

    (50) aggregate_function -> MAX PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    AND             reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    OR              reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 50 (aggregate_function -> MAX PARENIZQ operand PARENDER .)


state 145

    (71) column_constraints -> column_constraints constraint .

    NOT_NULL        reduce using rule 71 (column_constraints -> column_constraints constraint .)
    UNIQUE          reduce using rule 71 (column_constraints -> column_constraints constraint .)
    PRIMARY_KEY     reduce using rule 71 (column_constraints -> column_constraints constraint .)
    FOREIGN_KEY     reduce using rule 71 (column_constraints -> column_constraints constraint .)
    PUNTO_Y_COMA    reduce using rule 71 (column_constraints -> column_constraints constraint .)


state 146

    (68) data_type -> VARCHAR PARENIZQ NUM . PARENDER

    PARENDER        shift and go to state 154


state 147

    (6) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause . opt_having_clause opt_order_by_clause PUNTO_Y_COMA
    (33) opt_having_clause -> . HAVING condition
    (34) opt_having_clause -> . empty
    (78) empty -> .

    HAVING          shift and go to state 156
    ORDER_BY        reduce using rule 78 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 78 (empty -> .)

    opt_having_clause              shift and go to state 155
    empty                          shift and go to state 157

state 148

    (31) opt_group_by_clause -> GROUP_BY . column_list
    (23) column_list -> . identifier
    (24) column_list -> . identifier COMA column_list
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    column_list                    shift and go to state 158
    identifier                     shift and go to state 48

state 149

    (32) opt_group_by_clause -> empty .

    HAVING          reduce using rule 32 (opt_group_by_clause -> empty .)
    ORDER_BY        reduce using rule 32 (opt_group_by_clause -> empty .)
    PUNTO_Y_COMA    reduce using rule 32 (opt_group_by_clause -> empty .)


state 150

    (27) opt_join_clause -> JOIN identifier ON . condition
    (35) condition -> . expression
    (36) condition -> . condition AND condition
    (37) condition -> . condition OR condition
    (44) expression -> . operand comparador operand
    (45) expression -> . operand BETWEEN operand AND operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    identifier                     shift and go to state 62
    condition                      shift and go to state 159
    expression                     shift and go to state 56
    operand                        shift and go to state 57
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59

state 151

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list . PARENDER PUNTO_Y_COMA

    PARENDER        shift and go to state 160


state 152

    (58) value_list -> value .
    (59) value_list -> value . COMA value_list

    PARENDER        reduce using rule 58 (value_list -> value .)
    COMA            shift and go to state 161


state 153

    (45) expression -> operand BETWEEN operand AND operand .

    AND             reduce using rule 45 (expression -> operand BETWEEN operand AND operand .)
    OR              reduce using rule 45 (expression -> operand BETWEEN operand AND operand .)
    PUNTO_Y_COMA    reduce using rule 45 (expression -> operand BETWEEN operand AND operand .)
    GROUP_BY        reduce using rule 45 (expression -> operand BETWEEN operand AND operand .)
    HAVING          reduce using rule 45 (expression -> operand BETWEEN operand AND operand .)
    ORDER_BY        reduce using rule 45 (expression -> operand BETWEEN operand AND operand .)
    WHERE           reduce using rule 45 (expression -> operand BETWEEN operand AND operand .)


state 154

    (68) data_type -> VARCHAR PARENIZQ NUM PARENDER .

    NOT_NULL        reduce using rule 68 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)
    UNIQUE          reduce using rule 68 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)
    PRIMARY_KEY     reduce using rule 68 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)
    FOREIGN_KEY     reduce using rule 68 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)


state 155

    (6) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause . opt_order_by_clause PUNTO_Y_COMA
    (7) opt_order_by_clause -> . ORDER_BY column_list
    (8) opt_order_by_clause -> . empty
    (78) empty -> .

    ORDER_BY        shift and go to state 163
    PUNTO_Y_COMA    reduce using rule 78 (empty -> .)

    opt_order_by_clause            shift and go to state 162
    empty                          shift and go to state 164

state 156

    (33) opt_having_clause -> HAVING . condition
    (35) condition -> . expression
    (36) condition -> . condition AND condition
    (37) condition -> . condition OR condition
    (44) expression -> . operand comparador operand
    (45) expression -> . operand BETWEEN operand AND operand
    (38) operand -> . value
    (39) operand -> . aggregate_function
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (46) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (47) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (48) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (49) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (50) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    COUNT           shift and go to state 64
    SUM             shift and go to state 65
    AVG             shift and go to state 66
    MIN             shift and go to state 67
    MAX             shift and go to state 68
    ID              shift and go to state 16

    condition                      shift and go to state 165
    expression                     shift and go to state 56
    operand                        shift and go to state 57
    value                          shift and go to state 58
    aggregate_function             shift and go to state 59
    identifier                     shift and go to state 62

state 157

    (34) opt_having_clause -> empty .

    ORDER_BY        reduce using rule 34 (opt_having_clause -> empty .)
    PUNTO_Y_COMA    reduce using rule 34 (opt_having_clause -> empty .)


state 158

    (31) opt_group_by_clause -> GROUP_BY column_list .

    HAVING          reduce using rule 31 (opt_group_by_clause -> GROUP_BY column_list .)
    ORDER_BY        reduce using rule 31 (opt_group_by_clause -> GROUP_BY column_list .)
    PUNTO_Y_COMA    reduce using rule 31 (opt_group_by_clause -> GROUP_BY column_list .)


state 159

    (27) opt_join_clause -> JOIN identifier ON condition .
    (36) condition -> condition . AND condition
    (37) condition -> condition . OR condition

    WHERE           reduce using rule 27 (opt_join_clause -> JOIN identifier ON condition .)
    GROUP_BY        reduce using rule 27 (opt_join_clause -> JOIN identifier ON condition .)
    HAVING          reduce using rule 27 (opt_join_clause -> JOIN identifier ON condition .)
    ORDER_BY        reduce using rule 27 (opt_join_clause -> JOIN identifier ON condition .)
    PUNTO_Y_COMA    reduce using rule 27 (opt_join_clause -> JOIN identifier ON condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86


state 160

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 166


state 161

    (59) value_list -> value COMA . value_list
    (58) value_list -> . value
    (59) value_list -> . value COMA value_list
    (40) value -> . NUM
    (41) value -> . STRING
    (42) value -> . identifier
    (43) value -> . ASTERISCO
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    NUM             shift and go to state 60
    STRING          shift and go to state 61
    ASTERISCO       shift and go to state 63
    ID              shift and go to state 16

    value                          shift and go to state 152
    value_list                     shift and go to state 167
    identifier                     shift and go to state 62

state 162

    (6) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 168


state 163

    (7) opt_order_by_clause -> ORDER_BY . column_list
    (23) column_list -> . identifier
    (24) column_list -> . identifier COMA column_list
    (76) identifier -> . ID
    (77) identifier -> . ID PUNTO ID

    ID              shift and go to state 16

    column_list                    shift and go to state 169
    identifier                     shift and go to state 48

state 164

    (8) opt_order_by_clause -> empty .

    PUNTO_Y_COMA    reduce using rule 8 (opt_order_by_clause -> empty .)


state 165

    (33) opt_having_clause -> HAVING condition .
    (36) condition -> condition . AND condition
    (37) condition -> condition . OR condition

    ORDER_BY        reduce using rule 33 (opt_having_clause -> HAVING condition .)
    PUNTO_Y_COMA    reduce using rule 33 (opt_having_clause -> HAVING condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86


state 166

    (57) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA .

    $end            reduce using rule 57 (insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA .)


state 167

    (59) value_list -> value COMA value_list .

    PARENDER        reduce using rule 59 (value_list -> value COMA value_list .)


state 168

    (6) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA .

    $end            reduce using rule 6 (select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause PUNTO_Y_COMA .)


state 169

    (7) opt_order_by_clause -> ORDER_BY column_list .

    PUNTO_Y_COMA    reduce using rule 7 (opt_order_by_clause -> ORDER_BY column_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DISTINCT in state 7 resolved as shift
