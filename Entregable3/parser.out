Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ACTUALIZA
    AGREGA_LA_COLUMNA
    AGRUPANDO_POR
    BORRA_DE_LA
    CAMBIA_LA_TABLA
    CAST
    CLAVE_PRIMA
    CLAVE_REFERENTE
    COMO_MUCHO
    CONTANDO
    CREA_LA_TABLA
    DE_LA_TABLA
    DONDE
    ELIMINA_LA_COLUMNA
    EN
    ENTRE
    EN_ESTO
    ES_NULO
    EXISTE
    EXISTS
    FLOAT
    IN
    IS_NULL
    LOS_DISTINTOS
    LOS_VALORES
    METE_EN
    MEZCLANDO
    NO_NULO
    ORDENA_POR
    PARECIDO_A
    POR_DEFECTO
    SETEA
    TIRA_LA_TABLA
    TODO
    TRAEME
    TRANSFORMA_A
    UNICO
    WHERE_DEL_GROUP_BY
    Y

Grammar

Rule 0     S' -> statement
Rule 1     statement -> select_statement
Rule 2     statement -> insert_statement
Rule 3     statement -> update_statement
Rule 4     statement -> delete_statement
Rule 5     statement -> alter_table_statement
Rule 6     statement -> drop_table_statement
Rule 7     statement -> create_table_statement
Rule 8     select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
Rule 9     opt_order_by_clause -> ORDER_BY column_list
Rule 10    opt_order_by_clause -> empty
Rule 11    opt_limit_clause -> LIMIT NUM
Rule 12    opt_limit_clause -> empty
Rule 13    opt_distinct -> DISTINCT
Rule 14    opt_distinct -> empty
Rule 15    select_list -> ASTERISCO
Rule 16    select_list -> select_items
Rule 17    select_items -> select_items COMA select_item
Rule 18    select_items -> select_item
Rule 19    select_item -> DISTINCT identifier
Rule 20    select_item -> identifier
Rule 21    select_item -> function_call
Rule 22    function_call -> COUNT PARENIZQ operand PARENDER
Rule 23    function_call -> SUM PARENIZQ operand PARENDER
Rule 24    function_call -> AVG PARENIZQ operand PARENDER
Rule 25    function_call -> MIN PARENIZQ operand PARENDER
Rule 26    function_call -> MAX PARENIZQ operand PARENDER
Rule 27    column_list -> identifier
Rule 28    column_list -> identifier COMA column_list
Rule 29    table_list -> identifier
Rule 30    table_list -> identifier COMA table_list
Rule 31    opt_join_clause -> JOIN identifier ON condition
Rule 32    opt_join_clause -> empty
Rule 33    opt_where_clause -> WHERE condition
Rule 34    opt_where_clause -> empty
Rule 35    opt_group_by_clause -> GROUP_BY column_list
Rule 36    opt_group_by_clause -> empty
Rule 37    opt_having_clause -> HAVING condition
Rule 38    opt_having_clause -> empty
Rule 39    condition -> expression
Rule 40    condition -> condition AND condition
Rule 41    condition -> condition OR condition
Rule 42    operand -> value
Rule 43    operand -> aggregate_function
Rule 44    value -> NUM
Rule 45    value -> STRING
Rule 46    value -> identifier
Rule 47    value -> ASTERISCO
Rule 48    expression -> operand comparador operand
Rule 49    expression -> operand BETWEEN operand AND operand
Rule 50    aggregate_function -> COUNT PARENIZQ operand PARENDER
Rule 51    aggregate_function -> SUM PARENIZQ operand PARENDER
Rule 52    aggregate_function -> AVG PARENIZQ operand PARENDER
Rule 53    aggregate_function -> MIN PARENIZQ operand PARENDER
Rule 54    aggregate_function -> MAX PARENIZQ operand PARENDER
Rule 55    comparador -> IGUAL
Rule 56    comparador -> MAYOR_QUE
Rule 57    comparador -> MENOR_QUE
Rule 58    comparador -> MAYOR_IGUAL
Rule 59    comparador -> MENOR_IGUAL
Rule 60    comparador -> DIFERENTE
Rule 61    comparador -> LIKE
Rule 62    insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
Rule 63    value_list -> value
Rule 64    value_list -> value COMA value_list
Rule 65    update_statement -> UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA
Rule 66    assignment_list -> assignment
Rule 67    assignment_list -> assignment COMA assignment_list
Rule 68    assignment -> identifier IGUAL value
Rule 69    delete_statement -> DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA
Rule 70    alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA
Rule 71    alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA
Rule 72    drop_table_statement -> DROP_TABLE identifier PUNTO_Y_COMA
Rule 73    create_table_statement -> CREATE_TABLE identifier PARENIZQ column_definition_list PARENDER PUNTO_Y_COMA
Rule 74    column_definition_list -> column_definition
Rule 75    column_definition_list -> column_definition COMA column_definition_list
Rule 76    column_definition -> identifier data_type column_constraints
Rule 77    data_type -> VARCHAR PARENIZQ NUM PARENDER
Rule 78    data_type -> INT
Rule 79    column_constraints -> constraint
Rule 80    column_constraints -> column_constraints constraint
Rule 81    constraint -> NOT_NULL
Rule 82    constraint -> UNIQUE
Rule 83    constraint -> PRIMARY_KEY
Rule 84    constraint -> FOREIGN_KEY
Rule 85    constraint -> DEFAULT value
Rule 86    identifier -> ID
Rule 87    identifier -> ID PUNTO ID
Rule 88    empty -> <empty>

Terminals, with rules where they appear

ACTUALIZA            : 
ADD_COLUMN           : 70
AGREGA_LA_COLUMNA    : 
AGRUPANDO_POR        : 
ALTER_TABLE          : 70 71
AND                  : 40 49
ASTERISCO            : 15 47
AVG                  : 24 52
BETWEEN              : 49
BORRA_DE_LA          : 
CAMBIA_LA_TABLA      : 
CAST                 : 
CLAVE_PRIMA          : 
CLAVE_REFERENTE      : 
COMA                 : 17 28 30 64 67 75
COMO_MUCHO           : 
CONTANDO             : 
COUNT                : 22 50
CREATE_TABLE         : 73
CREA_LA_TABLA        : 
DEFAULT              : 85
DELETE_FROM          : 69
DE_LA_TABLA          : 
DIFERENTE            : 60
DISTINCT             : 13 19
DONDE                : 
DROP_COLUMN          : 71
DROP_TABLE           : 72
ELIMINA_LA_COLUMNA   : 
EN                   : 
ENTRE                : 
EN_ESTO              : 
ES_NULO              : 
EXISTE               : 
EXISTS               : 
FLOAT                : 
FOREIGN_KEY          : 84
FROM                 : 8
GROUP_BY             : 35
HAVING               : 37
ID                   : 86 87 87
IGUAL                : 55 68
IN                   : 
INSERT_INTO          : 62
INT                  : 78
IS_NULL              : 
JOIN                 : 31
LIKE                 : 61
LIMIT                : 11
LOS_DISTINTOS        : 
LOS_VALORES          : 
MAX                  : 26 54
MAYOR_IGUAL          : 58
MAYOR_QUE            : 56
MENOR_IGUAL          : 59
MENOR_QUE            : 57
METE_EN              : 
MEZCLANDO            : 
MIN                  : 25 53
NOT_NULL             : 81
NO_NULO              : 
NUM                  : 11 44 77
ON                   : 31
OR                   : 41
ORDENA_POR           : 
ORDER_BY             : 9
PARECIDO_A           : 
PARENDER             : 22 23 24 25 26 50 51 52 53 54 62 62 73 77
PARENIZQ             : 22 23 24 25 26 50 51 52 53 54 62 62 73 77
POR_DEFECTO          : 
PRIMARY_KEY          : 83
PUNTO                : 87
PUNTO_Y_COMA         : 8 62 65 69 70 71 72 73
SELECT               : 8
SET                  : 65
SETEA                : 
STRING               : 45
SUM                  : 23 51
TIRA_LA_TABLA        : 
TODO                 : 
TRAEME               : 
TRANSFORMA_A         : 
UNICO                : 
UNIQUE               : 82
UPDATE               : 65
VALUES               : 62
VARCHAR              : 77
WHERE                : 33
WHERE_DEL_GROUP_BY   : 
Y                    : 
error                : 

Nonterminals, with rules where they appear

aggregate_function   : 43
alter_table_statement : 5
assignment           : 66 67
assignment_list      : 65 67
column_constraints   : 76 80
column_definition    : 70 74 75
column_definition_list : 73 75
column_list          : 9 28 35 62
comparador           : 48
condition            : 31 33 37 40 40 41 41
constraint           : 79 80
create_table_statement : 7
data_type            : 76
delete_statement     : 4
drop_table_statement : 6
empty                : 10 12 14 32 34 36 38
expression           : 39
function_call        : 21
identifier           : 19 20 27 28 29 30 31 46 62 65 68 69 70 71 71 72 73 76
insert_statement     : 2
operand              : 22 23 24 25 26 48 48 49 49 49 50 51 52 53 54
opt_distinct         : 8
opt_group_by_clause  : 8
opt_having_clause    : 8
opt_join_clause      : 8
opt_limit_clause     : 8
opt_order_by_clause  : 8
opt_where_clause     : 8 65 69
select_item          : 17 18
select_items         : 16 17
select_list          : 8
select_statement     : 1
statement            : 0
table_list           : 8 30
update_statement     : 3
value                : 42 63 64 68 85
value_list           : 62 64

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . select_statement
    (2) statement -> . insert_statement
    (3) statement -> . update_statement
    (4) statement -> . delete_statement
    (5) statement -> . alter_table_statement
    (6) statement -> . drop_table_statement
    (7) statement -> . create_table_statement
    (8) select_statement -> . SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (62) insert_statement -> . INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
    (65) update_statement -> . UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA
    (69) delete_statement -> . DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA
    (70) alter_table_statement -> . ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA
    (71) alter_table_statement -> . ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA
    (72) drop_table_statement -> . DROP_TABLE identifier PUNTO_Y_COMA
    (73) create_table_statement -> . CREATE_TABLE identifier PARENIZQ column_definition_list PARENDER PUNTO_Y_COMA

    SELECT          shift and go to state 9
    INSERT_INTO     shift and go to state 10
    UPDATE          shift and go to state 11
    DELETE_FROM     shift and go to state 12
    ALTER_TABLE     shift and go to state 13
    DROP_TABLE      shift and go to state 14
    CREATE_TABLE    shift and go to state 15

    statement                      shift and go to state 1
    select_statement               shift and go to state 2
    insert_statement               shift and go to state 3
    update_statement               shift and go to state 4
    delete_statement               shift and go to state 5
    alter_table_statement          shift and go to state 6
    drop_table_statement           shift and go to state 7
    create_table_statement         shift and go to state 8

state 1

    (0) S' -> statement .



state 2

    (1) statement -> select_statement .

    $end            reduce using rule 1 (statement -> select_statement .)


state 3

    (2) statement -> insert_statement .

    $end            reduce using rule 2 (statement -> insert_statement .)


state 4

    (3) statement -> update_statement .

    $end            reduce using rule 3 (statement -> update_statement .)


state 5

    (4) statement -> delete_statement .

    $end            reduce using rule 4 (statement -> delete_statement .)


state 6

    (5) statement -> alter_table_statement .

    $end            reduce using rule 5 (statement -> alter_table_statement .)


state 7

    (6) statement -> drop_table_statement .

    $end            reduce using rule 6 (statement -> drop_table_statement .)


state 8

    (7) statement -> create_table_statement .

    $end            reduce using rule 7 (statement -> create_table_statement .)


state 9

    (8) select_statement -> SELECT . opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (13) opt_distinct -> . DISTINCT
    (14) opt_distinct -> . empty
    (88) empty -> .

  ! shift/reduce conflict for DISTINCT resolved as shift
    DISTINCT        shift and go to state 17
    ASTERISCO       reduce using rule 88 (empty -> .)
    ID              reduce using rule 88 (empty -> .)
    COUNT           reduce using rule 88 (empty -> .)
    SUM             reduce using rule 88 (empty -> .)
    AVG             reduce using rule 88 (empty -> .)
    MIN             reduce using rule 88 (empty -> .)
    MAX             reduce using rule 88 (empty -> .)

  ! DISTINCT        [ reduce using rule 88 (empty -> .) ]

    opt_distinct                   shift and go to state 16
    empty                          shift and go to state 18

state 10

    (62) insert_statement -> INSERT_INTO . identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 19

state 11

    (65) update_statement -> UPDATE . identifier SET assignment_list opt_where_clause PUNTO_Y_COMA
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 21

state 12

    (69) delete_statement -> DELETE_FROM . identifier opt_where_clause PUNTO_Y_COMA
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 22

state 13

    (70) alter_table_statement -> ALTER_TABLE . identifier ADD_COLUMN column_definition PUNTO_Y_COMA
    (71) alter_table_statement -> ALTER_TABLE . identifier DROP_COLUMN identifier PUNTO_Y_COMA
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 23

state 14

    (72) drop_table_statement -> DROP_TABLE . identifier PUNTO_Y_COMA
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 24

state 15

    (73) create_table_statement -> CREATE_TABLE . identifier PARENIZQ column_definition_list PARENDER PUNTO_Y_COMA
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 25

state 16

    (8) select_statement -> SELECT opt_distinct . select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (15) select_list -> . ASTERISCO
    (16) select_list -> . select_items
    (17) select_items -> . select_items COMA select_item
    (18) select_items -> . select_item
    (19) select_item -> . DISTINCT identifier
    (20) select_item -> . identifier
    (21) select_item -> . function_call
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID
    (22) function_call -> . COUNT PARENIZQ operand PARENDER
    (23) function_call -> . SUM PARENIZQ operand PARENDER
    (24) function_call -> . AVG PARENIZQ operand PARENDER
    (25) function_call -> . MIN PARENIZQ operand PARENDER
    (26) function_call -> . MAX PARENIZQ operand PARENDER

    ASTERISCO       shift and go to state 27
    DISTINCT        shift and go to state 30
    ID              shift and go to state 20
    COUNT           shift and go to state 33
    SUM             shift and go to state 34
    AVG             shift and go to state 35
    MIN             shift and go to state 36
    MAX             shift and go to state 37

    select_list                    shift and go to state 26
    select_items                   shift and go to state 28
    select_item                    shift and go to state 29
    identifier                     shift and go to state 31
    function_call                  shift and go to state 32

state 17

    (13) opt_distinct -> DISTINCT .

    ASTERISCO       reduce using rule 13 (opt_distinct -> DISTINCT .)
    DISTINCT        reduce using rule 13 (opt_distinct -> DISTINCT .)
    ID              reduce using rule 13 (opt_distinct -> DISTINCT .)
    COUNT           reduce using rule 13 (opt_distinct -> DISTINCT .)
    SUM             reduce using rule 13 (opt_distinct -> DISTINCT .)
    AVG             reduce using rule 13 (opt_distinct -> DISTINCT .)
    MIN             reduce using rule 13 (opt_distinct -> DISTINCT .)
    MAX             reduce using rule 13 (opt_distinct -> DISTINCT .)


state 18

    (14) opt_distinct -> empty .

    ASTERISCO       reduce using rule 14 (opt_distinct -> empty .)
    DISTINCT        reduce using rule 14 (opt_distinct -> empty .)
    ID              reduce using rule 14 (opt_distinct -> empty .)
    COUNT           reduce using rule 14 (opt_distinct -> empty .)
    SUM             reduce using rule 14 (opt_distinct -> empty .)
    AVG             reduce using rule 14 (opt_distinct -> empty .)
    MIN             reduce using rule 14 (opt_distinct -> empty .)
    MAX             reduce using rule 14 (opt_distinct -> empty .)


state 19

    (62) insert_statement -> INSERT_INTO identifier . PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA

    PARENIZQ        shift and go to state 38


state 20

    (86) identifier -> ID .
    (87) identifier -> ID . PUNTO ID

    PARENIZQ        reduce using rule 86 (identifier -> ID .)
    SET             reduce using rule 86 (identifier -> ID .)
    WHERE           reduce using rule 86 (identifier -> ID .)
    PUNTO_Y_COMA    reduce using rule 86 (identifier -> ID .)
    ADD_COLUMN      reduce using rule 86 (identifier -> ID .)
    DROP_COLUMN     reduce using rule 86 (identifier -> ID .)
    COMA            reduce using rule 86 (identifier -> ID .)
    FROM            reduce using rule 86 (identifier -> ID .)
    PARENDER        reduce using rule 86 (identifier -> ID .)
    IGUAL           reduce using rule 86 (identifier -> ID .)
    BETWEEN         reduce using rule 86 (identifier -> ID .)
    MAYOR_QUE       reduce using rule 86 (identifier -> ID .)
    MENOR_QUE       reduce using rule 86 (identifier -> ID .)
    MAYOR_IGUAL     reduce using rule 86 (identifier -> ID .)
    MENOR_IGUAL     reduce using rule 86 (identifier -> ID .)
    DIFERENTE       reduce using rule 86 (identifier -> ID .)
    LIKE            reduce using rule 86 (identifier -> ID .)
    VARCHAR         reduce using rule 86 (identifier -> ID .)
    INT             reduce using rule 86 (identifier -> ID .)
    JOIN            reduce using rule 86 (identifier -> ID .)
    GROUP_BY        reduce using rule 86 (identifier -> ID .)
    HAVING          reduce using rule 86 (identifier -> ID .)
    ORDER_BY        reduce using rule 86 (identifier -> ID .)
    LIMIT           reduce using rule 86 (identifier -> ID .)
    AND             reduce using rule 86 (identifier -> ID .)
    OR              reduce using rule 86 (identifier -> ID .)
    ON              reduce using rule 86 (identifier -> ID .)
    NOT_NULL        reduce using rule 86 (identifier -> ID .)
    UNIQUE          reduce using rule 86 (identifier -> ID .)
    PRIMARY_KEY     reduce using rule 86 (identifier -> ID .)
    FOREIGN_KEY     reduce using rule 86 (identifier -> ID .)
    DEFAULT         reduce using rule 86 (identifier -> ID .)
    PUNTO           shift and go to state 39


state 21

    (65) update_statement -> UPDATE identifier . SET assignment_list opt_where_clause PUNTO_Y_COMA

    SET             shift and go to state 40


state 22

    (69) delete_statement -> DELETE_FROM identifier . opt_where_clause PUNTO_Y_COMA
    (33) opt_where_clause -> . WHERE condition
    (34) opt_where_clause -> . empty
    (88) empty -> .

    WHERE           shift and go to state 42
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_where_clause               shift and go to state 41
    empty                          shift and go to state 43

state 23

    (70) alter_table_statement -> ALTER_TABLE identifier . ADD_COLUMN column_definition PUNTO_Y_COMA
    (71) alter_table_statement -> ALTER_TABLE identifier . DROP_COLUMN identifier PUNTO_Y_COMA

    ADD_COLUMN      shift and go to state 44
    DROP_COLUMN     shift and go to state 45


state 24

    (72) drop_table_statement -> DROP_TABLE identifier . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 46


state 25

    (73) create_table_statement -> CREATE_TABLE identifier . PARENIZQ column_definition_list PARENDER PUNTO_Y_COMA

    PARENIZQ        shift and go to state 47


state 26

    (8) select_statement -> SELECT opt_distinct select_list . FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA

    FROM            shift and go to state 48


state 27

    (15) select_list -> ASTERISCO .

    FROM            reduce using rule 15 (select_list -> ASTERISCO .)


state 28

    (16) select_list -> select_items .
    (17) select_items -> select_items . COMA select_item

    FROM            reduce using rule 16 (select_list -> select_items .)
    COMA            shift and go to state 49


state 29

    (18) select_items -> select_item .

    COMA            reduce using rule 18 (select_items -> select_item .)
    FROM            reduce using rule 18 (select_items -> select_item .)


state 30

    (19) select_item -> DISTINCT . identifier
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 50

state 31

    (20) select_item -> identifier .

    COMA            reduce using rule 20 (select_item -> identifier .)
    FROM            reduce using rule 20 (select_item -> identifier .)


state 32

    (21) select_item -> function_call .

    COMA            reduce using rule 21 (select_item -> function_call .)
    FROM            reduce using rule 21 (select_item -> function_call .)


state 33

    (22) function_call -> COUNT . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 51


state 34

    (23) function_call -> SUM . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 52


state 35

    (24) function_call -> AVG . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 53


state 36

    (25) function_call -> MIN . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 54


state 37

    (26) function_call -> MAX . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 55


state 38

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ . column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA
    (27) column_list -> . identifier
    (28) column_list -> . identifier COMA column_list
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 56
    column_list                    shift and go to state 57

state 39

    (87) identifier -> ID PUNTO . ID

    ID              shift and go to state 58


state 40

    (65) update_statement -> UPDATE identifier SET . assignment_list opt_where_clause PUNTO_Y_COMA
    (66) assignment_list -> . assignment
    (67) assignment_list -> . assignment COMA assignment_list
    (68) assignment -> . identifier IGUAL value
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 59
    assignment_list                shift and go to state 60
    assignment                     shift and go to state 61

state 41

    (69) delete_statement -> DELETE_FROM identifier opt_where_clause . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 62


state 42

    (33) opt_where_clause -> WHERE . condition
    (39) condition -> . expression
    (40) condition -> . condition AND condition
    (41) condition -> . condition OR condition
    (48) expression -> . operand comparador operand
    (49) expression -> . operand BETWEEN operand AND operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    condition                      shift and go to state 63
    expression                     shift and go to state 64
    operand                        shift and go to state 65
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 43

    (34) opt_where_clause -> empty .

    PUNTO_Y_COMA    reduce using rule 34 (opt_where_clause -> empty .)
    GROUP_BY        reduce using rule 34 (opt_where_clause -> empty .)
    HAVING          reduce using rule 34 (opt_where_clause -> empty .)
    ORDER_BY        reduce using rule 34 (opt_where_clause -> empty .)
    LIMIT           reduce using rule 34 (opt_where_clause -> empty .)


state 44

    (70) alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN . column_definition PUNTO_Y_COMA
    (76) column_definition -> . identifier data_type column_constraints
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 77
    column_definition              shift and go to state 78

state 45

    (71) alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN . identifier PUNTO_Y_COMA
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 79

state 46

    (72) drop_table_statement -> DROP_TABLE identifier PUNTO_Y_COMA .

    $end            reduce using rule 72 (drop_table_statement -> DROP_TABLE identifier PUNTO_Y_COMA .)


state 47

    (73) create_table_statement -> CREATE_TABLE identifier PARENIZQ . column_definition_list PARENDER PUNTO_Y_COMA
    (74) column_definition_list -> . column_definition
    (75) column_definition_list -> . column_definition COMA column_definition_list
    (76) column_definition -> . identifier data_type column_constraints
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 77
    column_definition_list         shift and go to state 80
    column_definition              shift and go to state 81

state 48

    (8) select_statement -> SELECT opt_distinct select_list FROM . table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (29) table_list -> . identifier
    (30) table_list -> . identifier COMA table_list
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    table_list                     shift and go to state 82
    identifier                     shift and go to state 83

state 49

    (17) select_items -> select_items COMA . select_item
    (19) select_item -> . DISTINCT identifier
    (20) select_item -> . identifier
    (21) select_item -> . function_call
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID
    (22) function_call -> . COUNT PARENIZQ operand PARENDER
    (23) function_call -> . SUM PARENIZQ operand PARENDER
    (24) function_call -> . AVG PARENIZQ operand PARENDER
    (25) function_call -> . MIN PARENIZQ operand PARENDER
    (26) function_call -> . MAX PARENIZQ operand PARENDER

    DISTINCT        shift and go to state 30
    ID              shift and go to state 20
    COUNT           shift and go to state 33
    SUM             shift and go to state 34
    AVG             shift and go to state 35
    MIN             shift and go to state 36
    MAX             shift and go to state 37

    select_item                    shift and go to state 84
    identifier                     shift and go to state 31
    function_call                  shift and go to state 32

state 50

    (19) select_item -> DISTINCT identifier .

    COMA            reduce using rule 19 (select_item -> DISTINCT identifier .)
    FROM            reduce using rule 19 (select_item -> DISTINCT identifier .)


state 51

    (22) function_call -> COUNT PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 85
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 52

    (23) function_call -> SUM PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 86
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 53

    (24) function_call -> AVG PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 87
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 54

    (25) function_call -> MIN PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 88
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 55

    (26) function_call -> MAX PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 89
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 56

    (27) column_list -> identifier .
    (28) column_list -> identifier . COMA column_list

    PARENDER        reduce using rule 27 (column_list -> identifier .)
    HAVING          reduce using rule 27 (column_list -> identifier .)
    ORDER_BY        reduce using rule 27 (column_list -> identifier .)
    LIMIT           reduce using rule 27 (column_list -> identifier .)
    PUNTO_Y_COMA    reduce using rule 27 (column_list -> identifier .)
    COMA            shift and go to state 90


state 57

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ column_list . PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA

    PARENDER        shift and go to state 91


state 58

    (87) identifier -> ID PUNTO ID .

    PARENIZQ        reduce using rule 87 (identifier -> ID PUNTO ID .)
    SET             reduce using rule 87 (identifier -> ID PUNTO ID .)
    WHERE           reduce using rule 87 (identifier -> ID PUNTO ID .)
    PUNTO_Y_COMA    reduce using rule 87 (identifier -> ID PUNTO ID .)
    ADD_COLUMN      reduce using rule 87 (identifier -> ID PUNTO ID .)
    DROP_COLUMN     reduce using rule 87 (identifier -> ID PUNTO ID .)
    COMA            reduce using rule 87 (identifier -> ID PUNTO ID .)
    FROM            reduce using rule 87 (identifier -> ID PUNTO ID .)
    PARENDER        reduce using rule 87 (identifier -> ID PUNTO ID .)
    IGUAL           reduce using rule 87 (identifier -> ID PUNTO ID .)
    BETWEEN         reduce using rule 87 (identifier -> ID PUNTO ID .)
    MAYOR_QUE       reduce using rule 87 (identifier -> ID PUNTO ID .)
    MENOR_QUE       reduce using rule 87 (identifier -> ID PUNTO ID .)
    MAYOR_IGUAL     reduce using rule 87 (identifier -> ID PUNTO ID .)
    MENOR_IGUAL     reduce using rule 87 (identifier -> ID PUNTO ID .)
    DIFERENTE       reduce using rule 87 (identifier -> ID PUNTO ID .)
    LIKE            reduce using rule 87 (identifier -> ID PUNTO ID .)
    VARCHAR         reduce using rule 87 (identifier -> ID PUNTO ID .)
    INT             reduce using rule 87 (identifier -> ID PUNTO ID .)
    JOIN            reduce using rule 87 (identifier -> ID PUNTO ID .)
    GROUP_BY        reduce using rule 87 (identifier -> ID PUNTO ID .)
    HAVING          reduce using rule 87 (identifier -> ID PUNTO ID .)
    ORDER_BY        reduce using rule 87 (identifier -> ID PUNTO ID .)
    LIMIT           reduce using rule 87 (identifier -> ID PUNTO ID .)
    AND             reduce using rule 87 (identifier -> ID PUNTO ID .)
    OR              reduce using rule 87 (identifier -> ID PUNTO ID .)
    ON              reduce using rule 87 (identifier -> ID PUNTO ID .)
    NOT_NULL        reduce using rule 87 (identifier -> ID PUNTO ID .)
    UNIQUE          reduce using rule 87 (identifier -> ID PUNTO ID .)
    PRIMARY_KEY     reduce using rule 87 (identifier -> ID PUNTO ID .)
    FOREIGN_KEY     reduce using rule 87 (identifier -> ID PUNTO ID .)
    DEFAULT         reduce using rule 87 (identifier -> ID PUNTO ID .)


state 59

    (68) assignment -> identifier . IGUAL value

    IGUAL           shift and go to state 92


state 60

    (65) update_statement -> UPDATE identifier SET assignment_list . opt_where_clause PUNTO_Y_COMA
    (33) opt_where_clause -> . WHERE condition
    (34) opt_where_clause -> . empty
    (88) empty -> .

    WHERE           shift and go to state 42
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_where_clause               shift and go to state 93
    empty                          shift and go to state 43

state 61

    (66) assignment_list -> assignment .
    (67) assignment_list -> assignment . COMA assignment_list

    WHERE           reduce using rule 66 (assignment_list -> assignment .)
    PUNTO_Y_COMA    reduce using rule 66 (assignment_list -> assignment .)
    COMA            shift and go to state 94


state 62

    (69) delete_statement -> DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA .

    $end            reduce using rule 69 (delete_statement -> DELETE_FROM identifier opt_where_clause PUNTO_Y_COMA .)


state 63

    (33) opt_where_clause -> WHERE condition .
    (40) condition -> condition . AND condition
    (41) condition -> condition . OR condition

    PUNTO_Y_COMA    reduce using rule 33 (opt_where_clause -> WHERE condition .)
    GROUP_BY        reduce using rule 33 (opt_where_clause -> WHERE condition .)
    HAVING          reduce using rule 33 (opt_where_clause -> WHERE condition .)
    ORDER_BY        reduce using rule 33 (opt_where_clause -> WHERE condition .)
    LIMIT           reduce using rule 33 (opt_where_clause -> WHERE condition .)
    AND             shift and go to state 95
    OR              shift and go to state 96


state 64

    (39) condition -> expression .

    AND             reduce using rule 39 (condition -> expression .)
    OR              reduce using rule 39 (condition -> expression .)
    PUNTO_Y_COMA    reduce using rule 39 (condition -> expression .)
    GROUP_BY        reduce using rule 39 (condition -> expression .)
    HAVING          reduce using rule 39 (condition -> expression .)
    ORDER_BY        reduce using rule 39 (condition -> expression .)
    LIMIT           reduce using rule 39 (condition -> expression .)
    WHERE           reduce using rule 39 (condition -> expression .)


state 65

    (48) expression -> operand . comparador operand
    (49) expression -> operand . BETWEEN operand AND operand
    (55) comparador -> . IGUAL
    (56) comparador -> . MAYOR_QUE
    (57) comparador -> . MENOR_QUE
    (58) comparador -> . MAYOR_IGUAL
    (59) comparador -> . MENOR_IGUAL
    (60) comparador -> . DIFERENTE
    (61) comparador -> . LIKE

    BETWEEN         shift and go to state 98
    IGUAL           shift and go to state 99
    MAYOR_QUE       shift and go to state 100
    MENOR_QUE       shift and go to state 101
    MAYOR_IGUAL     shift and go to state 102
    MENOR_IGUAL     shift and go to state 103
    DIFERENTE       shift and go to state 104
    LIKE            shift and go to state 105

    comparador                     shift and go to state 97

state 66

    (42) operand -> value .

    BETWEEN         reduce using rule 42 (operand -> value .)
    IGUAL           reduce using rule 42 (operand -> value .)
    MAYOR_QUE       reduce using rule 42 (operand -> value .)
    MENOR_QUE       reduce using rule 42 (operand -> value .)
    MAYOR_IGUAL     reduce using rule 42 (operand -> value .)
    MENOR_IGUAL     reduce using rule 42 (operand -> value .)
    DIFERENTE       reduce using rule 42 (operand -> value .)
    LIKE            reduce using rule 42 (operand -> value .)
    PARENDER        reduce using rule 42 (operand -> value .)
    AND             reduce using rule 42 (operand -> value .)
    OR              reduce using rule 42 (operand -> value .)
    PUNTO_Y_COMA    reduce using rule 42 (operand -> value .)
    GROUP_BY        reduce using rule 42 (operand -> value .)
    HAVING          reduce using rule 42 (operand -> value .)
    ORDER_BY        reduce using rule 42 (operand -> value .)
    LIMIT           reduce using rule 42 (operand -> value .)
    WHERE           reduce using rule 42 (operand -> value .)


state 67

    (43) operand -> aggregate_function .

    BETWEEN         reduce using rule 43 (operand -> aggregate_function .)
    IGUAL           reduce using rule 43 (operand -> aggregate_function .)
    MAYOR_QUE       reduce using rule 43 (operand -> aggregate_function .)
    MENOR_QUE       reduce using rule 43 (operand -> aggregate_function .)
    MAYOR_IGUAL     reduce using rule 43 (operand -> aggregate_function .)
    MENOR_IGUAL     reduce using rule 43 (operand -> aggregate_function .)
    DIFERENTE       reduce using rule 43 (operand -> aggregate_function .)
    LIKE            reduce using rule 43 (operand -> aggregate_function .)
    PARENDER        reduce using rule 43 (operand -> aggregate_function .)
    AND             reduce using rule 43 (operand -> aggregate_function .)
    OR              reduce using rule 43 (operand -> aggregate_function .)
    PUNTO_Y_COMA    reduce using rule 43 (operand -> aggregate_function .)
    GROUP_BY        reduce using rule 43 (operand -> aggregate_function .)
    HAVING          reduce using rule 43 (operand -> aggregate_function .)
    ORDER_BY        reduce using rule 43 (operand -> aggregate_function .)
    LIMIT           reduce using rule 43 (operand -> aggregate_function .)
    WHERE           reduce using rule 43 (operand -> aggregate_function .)


state 68

    (44) value -> NUM .

    BETWEEN         reduce using rule 44 (value -> NUM .)
    IGUAL           reduce using rule 44 (value -> NUM .)
    MAYOR_QUE       reduce using rule 44 (value -> NUM .)
    MENOR_QUE       reduce using rule 44 (value -> NUM .)
    MAYOR_IGUAL     reduce using rule 44 (value -> NUM .)
    MENOR_IGUAL     reduce using rule 44 (value -> NUM .)
    DIFERENTE       reduce using rule 44 (value -> NUM .)
    LIKE            reduce using rule 44 (value -> NUM .)
    PARENDER        reduce using rule 44 (value -> NUM .)
    COMA            reduce using rule 44 (value -> NUM .)
    WHERE           reduce using rule 44 (value -> NUM .)
    PUNTO_Y_COMA    reduce using rule 44 (value -> NUM .)
    AND             reduce using rule 44 (value -> NUM .)
    OR              reduce using rule 44 (value -> NUM .)
    GROUP_BY        reduce using rule 44 (value -> NUM .)
    HAVING          reduce using rule 44 (value -> NUM .)
    ORDER_BY        reduce using rule 44 (value -> NUM .)
    LIMIT           reduce using rule 44 (value -> NUM .)
    NOT_NULL        reduce using rule 44 (value -> NUM .)
    UNIQUE          reduce using rule 44 (value -> NUM .)
    PRIMARY_KEY     reduce using rule 44 (value -> NUM .)
    FOREIGN_KEY     reduce using rule 44 (value -> NUM .)
    DEFAULT         reduce using rule 44 (value -> NUM .)


state 69

    (45) value -> STRING .

    BETWEEN         reduce using rule 45 (value -> STRING .)
    IGUAL           reduce using rule 45 (value -> STRING .)
    MAYOR_QUE       reduce using rule 45 (value -> STRING .)
    MENOR_QUE       reduce using rule 45 (value -> STRING .)
    MAYOR_IGUAL     reduce using rule 45 (value -> STRING .)
    MENOR_IGUAL     reduce using rule 45 (value -> STRING .)
    DIFERENTE       reduce using rule 45 (value -> STRING .)
    LIKE            reduce using rule 45 (value -> STRING .)
    PARENDER        reduce using rule 45 (value -> STRING .)
    COMA            reduce using rule 45 (value -> STRING .)
    WHERE           reduce using rule 45 (value -> STRING .)
    PUNTO_Y_COMA    reduce using rule 45 (value -> STRING .)
    AND             reduce using rule 45 (value -> STRING .)
    OR              reduce using rule 45 (value -> STRING .)
    GROUP_BY        reduce using rule 45 (value -> STRING .)
    HAVING          reduce using rule 45 (value -> STRING .)
    ORDER_BY        reduce using rule 45 (value -> STRING .)
    LIMIT           reduce using rule 45 (value -> STRING .)
    NOT_NULL        reduce using rule 45 (value -> STRING .)
    UNIQUE          reduce using rule 45 (value -> STRING .)
    PRIMARY_KEY     reduce using rule 45 (value -> STRING .)
    FOREIGN_KEY     reduce using rule 45 (value -> STRING .)
    DEFAULT         reduce using rule 45 (value -> STRING .)


state 70

    (46) value -> identifier .

    BETWEEN         reduce using rule 46 (value -> identifier .)
    IGUAL           reduce using rule 46 (value -> identifier .)
    MAYOR_QUE       reduce using rule 46 (value -> identifier .)
    MENOR_QUE       reduce using rule 46 (value -> identifier .)
    MAYOR_IGUAL     reduce using rule 46 (value -> identifier .)
    MENOR_IGUAL     reduce using rule 46 (value -> identifier .)
    DIFERENTE       reduce using rule 46 (value -> identifier .)
    LIKE            reduce using rule 46 (value -> identifier .)
    PARENDER        reduce using rule 46 (value -> identifier .)
    COMA            reduce using rule 46 (value -> identifier .)
    WHERE           reduce using rule 46 (value -> identifier .)
    PUNTO_Y_COMA    reduce using rule 46 (value -> identifier .)
    AND             reduce using rule 46 (value -> identifier .)
    OR              reduce using rule 46 (value -> identifier .)
    GROUP_BY        reduce using rule 46 (value -> identifier .)
    HAVING          reduce using rule 46 (value -> identifier .)
    ORDER_BY        reduce using rule 46 (value -> identifier .)
    LIMIT           reduce using rule 46 (value -> identifier .)
    NOT_NULL        reduce using rule 46 (value -> identifier .)
    UNIQUE          reduce using rule 46 (value -> identifier .)
    PRIMARY_KEY     reduce using rule 46 (value -> identifier .)
    FOREIGN_KEY     reduce using rule 46 (value -> identifier .)
    DEFAULT         reduce using rule 46 (value -> identifier .)


state 71

    (47) value -> ASTERISCO .

    BETWEEN         reduce using rule 47 (value -> ASTERISCO .)
    IGUAL           reduce using rule 47 (value -> ASTERISCO .)
    MAYOR_QUE       reduce using rule 47 (value -> ASTERISCO .)
    MENOR_QUE       reduce using rule 47 (value -> ASTERISCO .)
    MAYOR_IGUAL     reduce using rule 47 (value -> ASTERISCO .)
    MENOR_IGUAL     reduce using rule 47 (value -> ASTERISCO .)
    DIFERENTE       reduce using rule 47 (value -> ASTERISCO .)
    LIKE            reduce using rule 47 (value -> ASTERISCO .)
    PARENDER        reduce using rule 47 (value -> ASTERISCO .)
    COMA            reduce using rule 47 (value -> ASTERISCO .)
    WHERE           reduce using rule 47 (value -> ASTERISCO .)
    PUNTO_Y_COMA    reduce using rule 47 (value -> ASTERISCO .)
    AND             reduce using rule 47 (value -> ASTERISCO .)
    OR              reduce using rule 47 (value -> ASTERISCO .)
    GROUP_BY        reduce using rule 47 (value -> ASTERISCO .)
    HAVING          reduce using rule 47 (value -> ASTERISCO .)
    ORDER_BY        reduce using rule 47 (value -> ASTERISCO .)
    LIMIT           reduce using rule 47 (value -> ASTERISCO .)
    NOT_NULL        reduce using rule 47 (value -> ASTERISCO .)
    UNIQUE          reduce using rule 47 (value -> ASTERISCO .)
    PRIMARY_KEY     reduce using rule 47 (value -> ASTERISCO .)
    FOREIGN_KEY     reduce using rule 47 (value -> ASTERISCO .)
    DEFAULT         reduce using rule 47 (value -> ASTERISCO .)


state 72

    (50) aggregate_function -> COUNT . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 106


state 73

    (51) aggregate_function -> SUM . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 107


state 74

    (52) aggregate_function -> AVG . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 108


state 75

    (53) aggregate_function -> MIN . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 109


state 76

    (54) aggregate_function -> MAX . PARENIZQ operand PARENDER

    PARENIZQ        shift and go to state 110


state 77

    (76) column_definition -> identifier . data_type column_constraints
    (77) data_type -> . VARCHAR PARENIZQ NUM PARENDER
    (78) data_type -> . INT

    VARCHAR         shift and go to state 112
    INT             shift and go to state 113

    data_type                      shift and go to state 111

state 78

    (70) alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 114


state 79

    (71) alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 115


state 80

    (73) create_table_statement -> CREATE_TABLE identifier PARENIZQ column_definition_list . PARENDER PUNTO_Y_COMA

    PARENDER        shift and go to state 116


state 81

    (74) column_definition_list -> column_definition .
    (75) column_definition_list -> column_definition . COMA column_definition_list

    PARENDER        reduce using rule 74 (column_definition_list -> column_definition .)
    COMA            shift and go to state 117


state 82

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list . opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (31) opt_join_clause -> . JOIN identifier ON condition
    (32) opt_join_clause -> . empty
    (88) empty -> .

    JOIN            shift and go to state 119
    WHERE           reduce using rule 88 (empty -> .)
    GROUP_BY        reduce using rule 88 (empty -> .)
    HAVING          reduce using rule 88 (empty -> .)
    ORDER_BY        reduce using rule 88 (empty -> .)
    LIMIT           reduce using rule 88 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_join_clause                shift and go to state 118
    empty                          shift and go to state 120

state 83

    (29) table_list -> identifier .
    (30) table_list -> identifier . COMA table_list

    JOIN            reduce using rule 29 (table_list -> identifier .)
    WHERE           reduce using rule 29 (table_list -> identifier .)
    GROUP_BY        reduce using rule 29 (table_list -> identifier .)
    HAVING          reduce using rule 29 (table_list -> identifier .)
    ORDER_BY        reduce using rule 29 (table_list -> identifier .)
    LIMIT           reduce using rule 29 (table_list -> identifier .)
    PUNTO_Y_COMA    reduce using rule 29 (table_list -> identifier .)
    COMA            shift and go to state 121


state 84

    (17) select_items -> select_items COMA select_item .

    COMA            reduce using rule 17 (select_items -> select_items COMA select_item .)
    FROM            reduce using rule 17 (select_items -> select_items COMA select_item .)


state 85

    (22) function_call -> COUNT PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 122


state 86

    (23) function_call -> SUM PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 123


state 87

    (24) function_call -> AVG PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 124


state 88

    (25) function_call -> MIN PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 125


state 89

    (26) function_call -> MAX PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 126


state 90

    (28) column_list -> identifier COMA . column_list
    (27) column_list -> . identifier
    (28) column_list -> . identifier COMA column_list
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 56
    column_list                    shift and go to state 127

state 91

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER . VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA

    VALUES          shift and go to state 128


state 92

    (68) assignment -> identifier IGUAL . value
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    ID              shift and go to state 20

    identifier                     shift and go to state 70
    value                          shift and go to state 129

state 93

    (65) update_statement -> UPDATE identifier SET assignment_list opt_where_clause . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 130


state 94

    (67) assignment_list -> assignment COMA . assignment_list
    (66) assignment_list -> . assignment
    (67) assignment_list -> . assignment COMA assignment_list
    (68) assignment -> . identifier IGUAL value
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    assignment                     shift and go to state 61
    assignment_list                shift and go to state 131
    identifier                     shift and go to state 59

state 95

    (40) condition -> condition AND . condition
    (39) condition -> . expression
    (40) condition -> . condition AND condition
    (41) condition -> . condition OR condition
    (48) expression -> . operand comparador operand
    (49) expression -> . operand BETWEEN operand AND operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    condition                      shift and go to state 132
    expression                     shift and go to state 64
    operand                        shift and go to state 65
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 96

    (41) condition -> condition OR . condition
    (39) condition -> . expression
    (40) condition -> . condition AND condition
    (41) condition -> . condition OR condition
    (48) expression -> . operand comparador operand
    (49) expression -> . operand BETWEEN operand AND operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    condition                      shift and go to state 133
    expression                     shift and go to state 64
    operand                        shift and go to state 65
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 97

    (48) expression -> operand comparador . operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 134
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 98

    (49) expression -> operand BETWEEN . operand AND operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 135
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 99

    (55) comparador -> IGUAL .

    NUM             reduce using rule 55 (comparador -> IGUAL .)
    STRING          reduce using rule 55 (comparador -> IGUAL .)
    ASTERISCO       reduce using rule 55 (comparador -> IGUAL .)
    COUNT           reduce using rule 55 (comparador -> IGUAL .)
    SUM             reduce using rule 55 (comparador -> IGUAL .)
    AVG             reduce using rule 55 (comparador -> IGUAL .)
    MIN             reduce using rule 55 (comparador -> IGUAL .)
    MAX             reduce using rule 55 (comparador -> IGUAL .)
    ID              reduce using rule 55 (comparador -> IGUAL .)


state 100

    (56) comparador -> MAYOR_QUE .

    NUM             reduce using rule 56 (comparador -> MAYOR_QUE .)
    STRING          reduce using rule 56 (comparador -> MAYOR_QUE .)
    ASTERISCO       reduce using rule 56 (comparador -> MAYOR_QUE .)
    COUNT           reduce using rule 56 (comparador -> MAYOR_QUE .)
    SUM             reduce using rule 56 (comparador -> MAYOR_QUE .)
    AVG             reduce using rule 56 (comparador -> MAYOR_QUE .)
    MIN             reduce using rule 56 (comparador -> MAYOR_QUE .)
    MAX             reduce using rule 56 (comparador -> MAYOR_QUE .)
    ID              reduce using rule 56 (comparador -> MAYOR_QUE .)


state 101

    (57) comparador -> MENOR_QUE .

    NUM             reduce using rule 57 (comparador -> MENOR_QUE .)
    STRING          reduce using rule 57 (comparador -> MENOR_QUE .)
    ASTERISCO       reduce using rule 57 (comparador -> MENOR_QUE .)
    COUNT           reduce using rule 57 (comparador -> MENOR_QUE .)
    SUM             reduce using rule 57 (comparador -> MENOR_QUE .)
    AVG             reduce using rule 57 (comparador -> MENOR_QUE .)
    MIN             reduce using rule 57 (comparador -> MENOR_QUE .)
    MAX             reduce using rule 57 (comparador -> MENOR_QUE .)
    ID              reduce using rule 57 (comparador -> MENOR_QUE .)


state 102

    (58) comparador -> MAYOR_IGUAL .

    NUM             reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    STRING          reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    ASTERISCO       reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    COUNT           reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    SUM             reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    AVG             reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    MIN             reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    MAX             reduce using rule 58 (comparador -> MAYOR_IGUAL .)
    ID              reduce using rule 58 (comparador -> MAYOR_IGUAL .)


state 103

    (59) comparador -> MENOR_IGUAL .

    NUM             reduce using rule 59 (comparador -> MENOR_IGUAL .)
    STRING          reduce using rule 59 (comparador -> MENOR_IGUAL .)
    ASTERISCO       reduce using rule 59 (comparador -> MENOR_IGUAL .)
    COUNT           reduce using rule 59 (comparador -> MENOR_IGUAL .)
    SUM             reduce using rule 59 (comparador -> MENOR_IGUAL .)
    AVG             reduce using rule 59 (comparador -> MENOR_IGUAL .)
    MIN             reduce using rule 59 (comparador -> MENOR_IGUAL .)
    MAX             reduce using rule 59 (comparador -> MENOR_IGUAL .)
    ID              reduce using rule 59 (comparador -> MENOR_IGUAL .)


state 104

    (60) comparador -> DIFERENTE .

    NUM             reduce using rule 60 (comparador -> DIFERENTE .)
    STRING          reduce using rule 60 (comparador -> DIFERENTE .)
    ASTERISCO       reduce using rule 60 (comparador -> DIFERENTE .)
    COUNT           reduce using rule 60 (comparador -> DIFERENTE .)
    SUM             reduce using rule 60 (comparador -> DIFERENTE .)
    AVG             reduce using rule 60 (comparador -> DIFERENTE .)
    MIN             reduce using rule 60 (comparador -> DIFERENTE .)
    MAX             reduce using rule 60 (comparador -> DIFERENTE .)
    ID              reduce using rule 60 (comparador -> DIFERENTE .)


state 105

    (61) comparador -> LIKE .

    NUM             reduce using rule 61 (comparador -> LIKE .)
    STRING          reduce using rule 61 (comparador -> LIKE .)
    ASTERISCO       reduce using rule 61 (comparador -> LIKE .)
    COUNT           reduce using rule 61 (comparador -> LIKE .)
    SUM             reduce using rule 61 (comparador -> LIKE .)
    AVG             reduce using rule 61 (comparador -> LIKE .)
    MIN             reduce using rule 61 (comparador -> LIKE .)
    MAX             reduce using rule 61 (comparador -> LIKE .)
    ID              reduce using rule 61 (comparador -> LIKE .)


state 106

    (50) aggregate_function -> COUNT PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 136
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 107

    (51) aggregate_function -> SUM PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 137
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 108

    (52) aggregate_function -> AVG PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 138
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 109

    (53) aggregate_function -> MIN PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 139
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 110

    (54) aggregate_function -> MAX PARENIZQ . operand PARENDER
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 140
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 111

    (76) column_definition -> identifier data_type . column_constraints
    (79) column_constraints -> . constraint
    (80) column_constraints -> . column_constraints constraint
    (81) constraint -> . NOT_NULL
    (82) constraint -> . UNIQUE
    (83) constraint -> . PRIMARY_KEY
    (84) constraint -> . FOREIGN_KEY
    (85) constraint -> . DEFAULT value

    NOT_NULL        shift and go to state 143
    UNIQUE          shift and go to state 144
    PRIMARY_KEY     shift and go to state 145
    FOREIGN_KEY     shift and go to state 146
    DEFAULT         shift and go to state 147

    column_constraints             shift and go to state 141
    constraint                     shift and go to state 142

state 112

    (77) data_type -> VARCHAR . PARENIZQ NUM PARENDER

    PARENIZQ        shift and go to state 148


state 113

    (78) data_type -> INT .

    NOT_NULL        reduce using rule 78 (data_type -> INT .)
    UNIQUE          reduce using rule 78 (data_type -> INT .)
    PRIMARY_KEY     reduce using rule 78 (data_type -> INT .)
    FOREIGN_KEY     reduce using rule 78 (data_type -> INT .)
    DEFAULT         reduce using rule 78 (data_type -> INT .)


state 114

    (70) alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA .

    $end            reduce using rule 70 (alter_table_statement -> ALTER_TABLE identifier ADD_COLUMN column_definition PUNTO_Y_COMA .)


state 115

    (71) alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA .

    $end            reduce using rule 71 (alter_table_statement -> ALTER_TABLE identifier DROP_COLUMN identifier PUNTO_Y_COMA .)


state 116

    (73) create_table_statement -> CREATE_TABLE identifier PARENIZQ column_definition_list PARENDER . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 149


state 117

    (75) column_definition_list -> column_definition COMA . column_definition_list
    (74) column_definition_list -> . column_definition
    (75) column_definition_list -> . column_definition COMA column_definition_list
    (76) column_definition -> . identifier data_type column_constraints
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    column_definition              shift and go to state 81
    column_definition_list         shift and go to state 150
    identifier                     shift and go to state 77

state 118

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause . opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (33) opt_where_clause -> . WHERE condition
    (34) opt_where_clause -> . empty
    (88) empty -> .

    WHERE           shift and go to state 42
    GROUP_BY        reduce using rule 88 (empty -> .)
    HAVING          reduce using rule 88 (empty -> .)
    ORDER_BY        reduce using rule 88 (empty -> .)
    LIMIT           reduce using rule 88 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_where_clause               shift and go to state 151
    empty                          shift and go to state 43

state 119

    (31) opt_join_clause -> JOIN . identifier ON condition
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 152

state 120

    (32) opt_join_clause -> empty .

    WHERE           reduce using rule 32 (opt_join_clause -> empty .)
    GROUP_BY        reduce using rule 32 (opt_join_clause -> empty .)
    HAVING          reduce using rule 32 (opt_join_clause -> empty .)
    ORDER_BY        reduce using rule 32 (opt_join_clause -> empty .)
    LIMIT           reduce using rule 32 (opt_join_clause -> empty .)
    PUNTO_Y_COMA    reduce using rule 32 (opt_join_clause -> empty .)


state 121

    (30) table_list -> identifier COMA . table_list
    (29) table_list -> . identifier
    (30) table_list -> . identifier COMA table_list
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    identifier                     shift and go to state 83
    table_list                     shift and go to state 153

state 122

    (22) function_call -> COUNT PARENIZQ operand PARENDER .

    COMA            reduce using rule 22 (function_call -> COUNT PARENIZQ operand PARENDER .)
    FROM            reduce using rule 22 (function_call -> COUNT PARENIZQ operand PARENDER .)


state 123

    (23) function_call -> SUM PARENIZQ operand PARENDER .

    COMA            reduce using rule 23 (function_call -> SUM PARENIZQ operand PARENDER .)
    FROM            reduce using rule 23 (function_call -> SUM PARENIZQ operand PARENDER .)


state 124

    (24) function_call -> AVG PARENIZQ operand PARENDER .

    COMA            reduce using rule 24 (function_call -> AVG PARENIZQ operand PARENDER .)
    FROM            reduce using rule 24 (function_call -> AVG PARENIZQ operand PARENDER .)


state 125

    (25) function_call -> MIN PARENIZQ operand PARENDER .

    COMA            reduce using rule 25 (function_call -> MIN PARENIZQ operand PARENDER .)
    FROM            reduce using rule 25 (function_call -> MIN PARENIZQ operand PARENDER .)


state 126

    (26) function_call -> MAX PARENIZQ operand PARENDER .

    COMA            reduce using rule 26 (function_call -> MAX PARENIZQ operand PARENDER .)
    FROM            reduce using rule 26 (function_call -> MAX PARENIZQ operand PARENDER .)


state 127

    (28) column_list -> identifier COMA column_list .

    PARENDER        reduce using rule 28 (column_list -> identifier COMA column_list .)
    HAVING          reduce using rule 28 (column_list -> identifier COMA column_list .)
    ORDER_BY        reduce using rule 28 (column_list -> identifier COMA column_list .)
    LIMIT           reduce using rule 28 (column_list -> identifier COMA column_list .)
    PUNTO_Y_COMA    reduce using rule 28 (column_list -> identifier COMA column_list .)


state 128

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES . PARENIZQ value_list PARENDER PUNTO_Y_COMA

    PARENIZQ        shift and go to state 154


state 129

    (68) assignment -> identifier IGUAL value .

    COMA            reduce using rule 68 (assignment -> identifier IGUAL value .)
    WHERE           reduce using rule 68 (assignment -> identifier IGUAL value .)
    PUNTO_Y_COMA    reduce using rule 68 (assignment -> identifier IGUAL value .)


state 130

    (65) update_statement -> UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA .

    $end            reduce using rule 65 (update_statement -> UPDATE identifier SET assignment_list opt_where_clause PUNTO_Y_COMA .)


state 131

    (67) assignment_list -> assignment COMA assignment_list .

    WHERE           reduce using rule 67 (assignment_list -> assignment COMA assignment_list .)
    PUNTO_Y_COMA    reduce using rule 67 (assignment_list -> assignment COMA assignment_list .)


state 132

    (40) condition -> condition AND condition .
    (40) condition -> condition . AND condition
    (41) condition -> condition . OR condition

    AND             reduce using rule 40 (condition -> condition AND condition .)
    OR              reduce using rule 40 (condition -> condition AND condition .)
    PUNTO_Y_COMA    reduce using rule 40 (condition -> condition AND condition .)
    GROUP_BY        reduce using rule 40 (condition -> condition AND condition .)
    HAVING          reduce using rule 40 (condition -> condition AND condition .)
    ORDER_BY        reduce using rule 40 (condition -> condition AND condition .)
    LIMIT           reduce using rule 40 (condition -> condition AND condition .)
    WHERE           reduce using rule 40 (condition -> condition AND condition .)

  ! AND             [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]


state 133

    (41) condition -> condition OR condition .
    (40) condition -> condition . AND condition
    (41) condition -> condition . OR condition

    AND             reduce using rule 41 (condition -> condition OR condition .)
    OR              reduce using rule 41 (condition -> condition OR condition .)
    PUNTO_Y_COMA    reduce using rule 41 (condition -> condition OR condition .)
    GROUP_BY        reduce using rule 41 (condition -> condition OR condition .)
    HAVING          reduce using rule 41 (condition -> condition OR condition .)
    ORDER_BY        reduce using rule 41 (condition -> condition OR condition .)
    LIMIT           reduce using rule 41 (condition -> condition OR condition .)
    WHERE           reduce using rule 41 (condition -> condition OR condition .)

  ! AND             [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]


state 134

    (48) expression -> operand comparador operand .

    AND             reduce using rule 48 (expression -> operand comparador operand .)
    OR              reduce using rule 48 (expression -> operand comparador operand .)
    PUNTO_Y_COMA    reduce using rule 48 (expression -> operand comparador operand .)
    GROUP_BY        reduce using rule 48 (expression -> operand comparador operand .)
    HAVING          reduce using rule 48 (expression -> operand comparador operand .)
    ORDER_BY        reduce using rule 48 (expression -> operand comparador operand .)
    LIMIT           reduce using rule 48 (expression -> operand comparador operand .)
    WHERE           reduce using rule 48 (expression -> operand comparador operand .)


state 135

    (49) expression -> operand BETWEEN operand . AND operand

    AND             shift and go to state 155


state 136

    (50) aggregate_function -> COUNT PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 156


state 137

    (51) aggregate_function -> SUM PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 157


state 138

    (52) aggregate_function -> AVG PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 158


state 139

    (53) aggregate_function -> MIN PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 159


state 140

    (54) aggregate_function -> MAX PARENIZQ operand . PARENDER

    PARENDER        shift and go to state 160


state 141

    (76) column_definition -> identifier data_type column_constraints .
    (80) column_constraints -> column_constraints . constraint
    (81) constraint -> . NOT_NULL
    (82) constraint -> . UNIQUE
    (83) constraint -> . PRIMARY_KEY
    (84) constraint -> . FOREIGN_KEY
    (85) constraint -> . DEFAULT value

    PUNTO_Y_COMA    reduce using rule 76 (column_definition -> identifier data_type column_constraints .)
    COMA            reduce using rule 76 (column_definition -> identifier data_type column_constraints .)
    PARENDER        reduce using rule 76 (column_definition -> identifier data_type column_constraints .)
    NOT_NULL        shift and go to state 143
    UNIQUE          shift and go to state 144
    PRIMARY_KEY     shift and go to state 145
    FOREIGN_KEY     shift and go to state 146
    DEFAULT         shift and go to state 147

    constraint                     shift and go to state 161

state 142

    (79) column_constraints -> constraint .

    NOT_NULL        reduce using rule 79 (column_constraints -> constraint .)
    UNIQUE          reduce using rule 79 (column_constraints -> constraint .)
    PRIMARY_KEY     reduce using rule 79 (column_constraints -> constraint .)
    FOREIGN_KEY     reduce using rule 79 (column_constraints -> constraint .)
    DEFAULT         reduce using rule 79 (column_constraints -> constraint .)
    PUNTO_Y_COMA    reduce using rule 79 (column_constraints -> constraint .)
    COMA            reduce using rule 79 (column_constraints -> constraint .)
    PARENDER        reduce using rule 79 (column_constraints -> constraint .)


state 143

    (81) constraint -> NOT_NULL .

    NOT_NULL        reduce using rule 81 (constraint -> NOT_NULL .)
    UNIQUE          reduce using rule 81 (constraint -> NOT_NULL .)
    PRIMARY_KEY     reduce using rule 81 (constraint -> NOT_NULL .)
    FOREIGN_KEY     reduce using rule 81 (constraint -> NOT_NULL .)
    DEFAULT         reduce using rule 81 (constraint -> NOT_NULL .)
    PUNTO_Y_COMA    reduce using rule 81 (constraint -> NOT_NULL .)
    COMA            reduce using rule 81 (constraint -> NOT_NULL .)
    PARENDER        reduce using rule 81 (constraint -> NOT_NULL .)


state 144

    (82) constraint -> UNIQUE .

    NOT_NULL        reduce using rule 82 (constraint -> UNIQUE .)
    UNIQUE          reduce using rule 82 (constraint -> UNIQUE .)
    PRIMARY_KEY     reduce using rule 82 (constraint -> UNIQUE .)
    FOREIGN_KEY     reduce using rule 82 (constraint -> UNIQUE .)
    DEFAULT         reduce using rule 82 (constraint -> UNIQUE .)
    PUNTO_Y_COMA    reduce using rule 82 (constraint -> UNIQUE .)
    COMA            reduce using rule 82 (constraint -> UNIQUE .)
    PARENDER        reduce using rule 82 (constraint -> UNIQUE .)


state 145

    (83) constraint -> PRIMARY_KEY .

    NOT_NULL        reduce using rule 83 (constraint -> PRIMARY_KEY .)
    UNIQUE          reduce using rule 83 (constraint -> PRIMARY_KEY .)
    PRIMARY_KEY     reduce using rule 83 (constraint -> PRIMARY_KEY .)
    FOREIGN_KEY     reduce using rule 83 (constraint -> PRIMARY_KEY .)
    DEFAULT         reduce using rule 83 (constraint -> PRIMARY_KEY .)
    PUNTO_Y_COMA    reduce using rule 83 (constraint -> PRIMARY_KEY .)
    COMA            reduce using rule 83 (constraint -> PRIMARY_KEY .)
    PARENDER        reduce using rule 83 (constraint -> PRIMARY_KEY .)


state 146

    (84) constraint -> FOREIGN_KEY .

    NOT_NULL        reduce using rule 84 (constraint -> FOREIGN_KEY .)
    UNIQUE          reduce using rule 84 (constraint -> FOREIGN_KEY .)
    PRIMARY_KEY     reduce using rule 84 (constraint -> FOREIGN_KEY .)
    FOREIGN_KEY     reduce using rule 84 (constraint -> FOREIGN_KEY .)
    DEFAULT         reduce using rule 84 (constraint -> FOREIGN_KEY .)
    PUNTO_Y_COMA    reduce using rule 84 (constraint -> FOREIGN_KEY .)
    COMA            reduce using rule 84 (constraint -> FOREIGN_KEY .)
    PARENDER        reduce using rule 84 (constraint -> FOREIGN_KEY .)


state 147

    (85) constraint -> DEFAULT . value
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    ID              shift and go to state 20

    value                          shift and go to state 162
    identifier                     shift and go to state 70

state 148

    (77) data_type -> VARCHAR PARENIZQ . NUM PARENDER

    NUM             shift and go to state 163


state 149

    (73) create_table_statement -> CREATE_TABLE identifier PARENIZQ column_definition_list PARENDER PUNTO_Y_COMA .

    $end            reduce using rule 73 (create_table_statement -> CREATE_TABLE identifier PARENIZQ column_definition_list PARENDER PUNTO_Y_COMA .)


state 150

    (75) column_definition_list -> column_definition COMA column_definition_list .

    PARENDER        reduce using rule 75 (column_definition_list -> column_definition COMA column_definition_list .)


state 151

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause . opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (35) opt_group_by_clause -> . GROUP_BY column_list
    (36) opt_group_by_clause -> . empty
    (88) empty -> .

    GROUP_BY        shift and go to state 165
    HAVING          reduce using rule 88 (empty -> .)
    ORDER_BY        reduce using rule 88 (empty -> .)
    LIMIT           reduce using rule 88 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_group_by_clause            shift and go to state 164
    empty                          shift and go to state 166

state 152

    (31) opt_join_clause -> JOIN identifier . ON condition

    ON              shift and go to state 167


state 153

    (30) table_list -> identifier COMA table_list .

    JOIN            reduce using rule 30 (table_list -> identifier COMA table_list .)
    WHERE           reduce using rule 30 (table_list -> identifier COMA table_list .)
    GROUP_BY        reduce using rule 30 (table_list -> identifier COMA table_list .)
    HAVING          reduce using rule 30 (table_list -> identifier COMA table_list .)
    ORDER_BY        reduce using rule 30 (table_list -> identifier COMA table_list .)
    LIMIT           reduce using rule 30 (table_list -> identifier COMA table_list .)
    PUNTO_Y_COMA    reduce using rule 30 (table_list -> identifier COMA table_list .)


state 154

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ . value_list PARENDER PUNTO_Y_COMA
    (63) value_list -> . value
    (64) value_list -> . value COMA value_list
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    ID              shift and go to state 20

    identifier                     shift and go to state 70
    value_list                     shift and go to state 168
    value                          shift and go to state 169

state 155

    (49) expression -> operand BETWEEN operand AND . operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    operand                        shift and go to state 170
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 156

    (50) aggregate_function -> COUNT PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    LIKE            reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    AND             reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    OR              reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    LIMIT           reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 50 (aggregate_function -> COUNT PARENIZQ operand PARENDER .)


state 157

    (51) aggregate_function -> SUM PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    LIKE            reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    AND             reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    OR              reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    LIMIT           reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 51 (aggregate_function -> SUM PARENIZQ operand PARENDER .)


state 158

    (52) aggregate_function -> AVG PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    LIKE            reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    AND             reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    OR              reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    LIMIT           reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 52 (aggregate_function -> AVG PARENIZQ operand PARENDER .)


state 159

    (53) aggregate_function -> MIN PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    LIKE            reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    AND             reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    OR              reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    LIMIT           reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 53 (aggregate_function -> MIN PARENIZQ operand PARENDER .)


state 160

    (54) aggregate_function -> MAX PARENIZQ operand PARENDER .

    BETWEEN         reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    IGUAL           reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MAYOR_QUE       reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MENOR_QUE       reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MAYOR_IGUAL     reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    MENOR_IGUAL     reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    DIFERENTE       reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    LIKE            reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    PARENDER        reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    AND             reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    OR              reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    PUNTO_Y_COMA    reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    GROUP_BY        reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    HAVING          reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    ORDER_BY        reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    LIMIT           reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)
    WHERE           reduce using rule 54 (aggregate_function -> MAX PARENIZQ operand PARENDER .)


state 161

    (80) column_constraints -> column_constraints constraint .

    NOT_NULL        reduce using rule 80 (column_constraints -> column_constraints constraint .)
    UNIQUE          reduce using rule 80 (column_constraints -> column_constraints constraint .)
    PRIMARY_KEY     reduce using rule 80 (column_constraints -> column_constraints constraint .)
    FOREIGN_KEY     reduce using rule 80 (column_constraints -> column_constraints constraint .)
    DEFAULT         reduce using rule 80 (column_constraints -> column_constraints constraint .)
    PUNTO_Y_COMA    reduce using rule 80 (column_constraints -> column_constraints constraint .)
    COMA            reduce using rule 80 (column_constraints -> column_constraints constraint .)
    PARENDER        reduce using rule 80 (column_constraints -> column_constraints constraint .)


state 162

    (85) constraint -> DEFAULT value .

    NOT_NULL        reduce using rule 85 (constraint -> DEFAULT value .)
    UNIQUE          reduce using rule 85 (constraint -> DEFAULT value .)
    PRIMARY_KEY     reduce using rule 85 (constraint -> DEFAULT value .)
    FOREIGN_KEY     reduce using rule 85 (constraint -> DEFAULT value .)
    DEFAULT         reduce using rule 85 (constraint -> DEFAULT value .)
    PUNTO_Y_COMA    reduce using rule 85 (constraint -> DEFAULT value .)
    COMA            reduce using rule 85 (constraint -> DEFAULT value .)
    PARENDER        reduce using rule 85 (constraint -> DEFAULT value .)


state 163

    (77) data_type -> VARCHAR PARENIZQ NUM . PARENDER

    PARENDER        shift and go to state 171


state 164

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause . opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (37) opt_having_clause -> . HAVING condition
    (38) opt_having_clause -> . empty
    (88) empty -> .

    HAVING          shift and go to state 173
    ORDER_BY        reduce using rule 88 (empty -> .)
    LIMIT           reduce using rule 88 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_having_clause              shift and go to state 172
    empty                          shift and go to state 174

state 165

    (35) opt_group_by_clause -> GROUP_BY . column_list
    (27) column_list -> . identifier
    (28) column_list -> . identifier COMA column_list
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    column_list                    shift and go to state 175
    identifier                     shift and go to state 56

state 166

    (36) opt_group_by_clause -> empty .

    HAVING          reduce using rule 36 (opt_group_by_clause -> empty .)
    ORDER_BY        reduce using rule 36 (opt_group_by_clause -> empty .)
    LIMIT           reduce using rule 36 (opt_group_by_clause -> empty .)
    PUNTO_Y_COMA    reduce using rule 36 (opt_group_by_clause -> empty .)


state 167

    (31) opt_join_clause -> JOIN identifier ON . condition
    (39) condition -> . expression
    (40) condition -> . condition AND condition
    (41) condition -> . condition OR condition
    (48) expression -> . operand comparador operand
    (49) expression -> . operand BETWEEN operand AND operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    identifier                     shift and go to state 70
    condition                      shift and go to state 176
    expression                     shift and go to state 64
    operand                        shift and go to state 65
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67

state 168

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list . PARENDER PUNTO_Y_COMA

    PARENDER        shift and go to state 177


state 169

    (63) value_list -> value .
    (64) value_list -> value . COMA value_list

    PARENDER        reduce using rule 63 (value_list -> value .)
    COMA            shift and go to state 178


state 170

    (49) expression -> operand BETWEEN operand AND operand .

    AND             reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)
    OR              reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)
    PUNTO_Y_COMA    reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)
    GROUP_BY        reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)
    HAVING          reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)
    ORDER_BY        reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)
    LIMIT           reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)
    WHERE           reduce using rule 49 (expression -> operand BETWEEN operand AND operand .)


state 171

    (77) data_type -> VARCHAR PARENIZQ NUM PARENDER .

    NOT_NULL        reduce using rule 77 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)
    UNIQUE          reduce using rule 77 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)
    PRIMARY_KEY     reduce using rule 77 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)
    FOREIGN_KEY     reduce using rule 77 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)
    DEFAULT         reduce using rule 77 (data_type -> VARCHAR PARENIZQ NUM PARENDER .)


state 172

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause . opt_order_by_clause opt_limit_clause PUNTO_Y_COMA
    (9) opt_order_by_clause -> . ORDER_BY column_list
    (10) opt_order_by_clause -> . empty
    (88) empty -> .

    ORDER_BY        shift and go to state 180
    LIMIT           reduce using rule 88 (empty -> .)
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_order_by_clause            shift and go to state 179
    empty                          shift and go to state 181

state 173

    (37) opt_having_clause -> HAVING . condition
    (39) condition -> . expression
    (40) condition -> . condition AND condition
    (41) condition -> . condition OR condition
    (48) expression -> . operand comparador operand
    (49) expression -> . operand BETWEEN operand AND operand
    (42) operand -> . value
    (43) operand -> . aggregate_function
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (50) aggregate_function -> . COUNT PARENIZQ operand PARENDER
    (51) aggregate_function -> . SUM PARENIZQ operand PARENDER
    (52) aggregate_function -> . AVG PARENIZQ operand PARENDER
    (53) aggregate_function -> . MIN PARENIZQ operand PARENDER
    (54) aggregate_function -> . MAX PARENIZQ operand PARENDER
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    COUNT           shift and go to state 72
    SUM             shift and go to state 73
    AVG             shift and go to state 74
    MIN             shift and go to state 75
    MAX             shift and go to state 76
    ID              shift and go to state 20

    condition                      shift and go to state 182
    expression                     shift and go to state 64
    operand                        shift and go to state 65
    value                          shift and go to state 66
    aggregate_function             shift and go to state 67
    identifier                     shift and go to state 70

state 174

    (38) opt_having_clause -> empty .

    ORDER_BY        reduce using rule 38 (opt_having_clause -> empty .)
    LIMIT           reduce using rule 38 (opt_having_clause -> empty .)
    PUNTO_Y_COMA    reduce using rule 38 (opt_having_clause -> empty .)


state 175

    (35) opt_group_by_clause -> GROUP_BY column_list .

    HAVING          reduce using rule 35 (opt_group_by_clause -> GROUP_BY column_list .)
    ORDER_BY        reduce using rule 35 (opt_group_by_clause -> GROUP_BY column_list .)
    LIMIT           reduce using rule 35 (opt_group_by_clause -> GROUP_BY column_list .)
    PUNTO_Y_COMA    reduce using rule 35 (opt_group_by_clause -> GROUP_BY column_list .)


state 176

    (31) opt_join_clause -> JOIN identifier ON condition .
    (40) condition -> condition . AND condition
    (41) condition -> condition . OR condition

    WHERE           reduce using rule 31 (opt_join_clause -> JOIN identifier ON condition .)
    GROUP_BY        reduce using rule 31 (opt_join_clause -> JOIN identifier ON condition .)
    HAVING          reduce using rule 31 (opt_join_clause -> JOIN identifier ON condition .)
    ORDER_BY        reduce using rule 31 (opt_join_clause -> JOIN identifier ON condition .)
    LIMIT           reduce using rule 31 (opt_join_clause -> JOIN identifier ON condition .)
    PUNTO_Y_COMA    reduce using rule 31 (opt_join_clause -> JOIN identifier ON condition .)
    AND             shift and go to state 95
    OR              shift and go to state 96


state 177

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 183


state 178

    (64) value_list -> value COMA . value_list
    (63) value_list -> . value
    (64) value_list -> . value COMA value_list
    (44) value -> . NUM
    (45) value -> . STRING
    (46) value -> . identifier
    (47) value -> . ASTERISCO
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    NUM             shift and go to state 68
    STRING          shift and go to state 69
    ASTERISCO       shift and go to state 71
    ID              shift and go to state 20

    value                          shift and go to state 169
    value_list                     shift and go to state 184
    identifier                     shift and go to state 70

state 179

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause . opt_limit_clause PUNTO_Y_COMA
    (11) opt_limit_clause -> . LIMIT NUM
    (12) opt_limit_clause -> . empty
    (88) empty -> .

    LIMIT           shift and go to state 186
    PUNTO_Y_COMA    reduce using rule 88 (empty -> .)

    opt_limit_clause               shift and go to state 185
    empty                          shift and go to state 187

state 180

    (9) opt_order_by_clause -> ORDER_BY . column_list
    (27) column_list -> . identifier
    (28) column_list -> . identifier COMA column_list
    (86) identifier -> . ID
    (87) identifier -> . ID PUNTO ID

    ID              shift and go to state 20

    column_list                    shift and go to state 188
    identifier                     shift and go to state 56

state 181

    (10) opt_order_by_clause -> empty .

    LIMIT           reduce using rule 10 (opt_order_by_clause -> empty .)
    PUNTO_Y_COMA    reduce using rule 10 (opt_order_by_clause -> empty .)


state 182

    (37) opt_having_clause -> HAVING condition .
    (40) condition -> condition . AND condition
    (41) condition -> condition . OR condition

    ORDER_BY        reduce using rule 37 (opt_having_clause -> HAVING condition .)
    LIMIT           reduce using rule 37 (opt_having_clause -> HAVING condition .)
    PUNTO_Y_COMA    reduce using rule 37 (opt_having_clause -> HAVING condition .)
    AND             shift and go to state 95
    OR              shift and go to state 96


state 183

    (62) insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA .

    $end            reduce using rule 62 (insert_statement -> INSERT_INTO identifier PARENIZQ column_list PARENDER VALUES PARENIZQ value_list PARENDER PUNTO_Y_COMA .)


state 184

    (64) value_list -> value COMA value_list .

    PARENDER        reduce using rule 64 (value_list -> value COMA value_list .)


state 185

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 189


state 186

    (11) opt_limit_clause -> LIMIT . NUM

    NUM             shift and go to state 190


state 187

    (12) opt_limit_clause -> empty .

    PUNTO_Y_COMA    reduce using rule 12 (opt_limit_clause -> empty .)


state 188

    (9) opt_order_by_clause -> ORDER_BY column_list .

    LIMIT           reduce using rule 9 (opt_order_by_clause -> ORDER_BY column_list .)
    PUNTO_Y_COMA    reduce using rule 9 (opt_order_by_clause -> ORDER_BY column_list .)


state 189

    (8) select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA .

    $end            reduce using rule 8 (select_statement -> SELECT opt_distinct select_list FROM table_list opt_join_clause opt_where_clause opt_group_by_clause opt_having_clause opt_order_by_clause opt_limit_clause PUNTO_Y_COMA .)


state 190

    (11) opt_limit_clause -> LIMIT NUM .

    PUNTO_Y_COMA    reduce using rule 11 (opt_limit_clause -> LIMIT NUM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DISTINCT in state 9 resolved as shift
